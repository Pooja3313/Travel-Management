{"version":3,"file":"static/js/538.21dbbce5.chunk.js","mappings":"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","sources":["sections/auth/jwt/jwt-login-view.js","sections/auth/jwt/jwt-register-view.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\r\n// config\r\n// import { PATH_AFTER_LOGIN } from 'src/config-global';\r\nimport { PATH_AFTER_LOGINROOT } from 'src/config-global';\r\n\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function JwtLoginView() {\r\n  const { login } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  const password = useBoolean();\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  // const defaultValues = {\r\n  //   email: 'demo@minimals.cc',\r\n  //   password: 'demo1234',\r\n  // };\r\n    const defaultRootValues = {\r\n    email: 'employee@minimals.cc',\r\n    password: 'employee1234',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    // defaultValues,\r\n    defaultRootValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await login?.(data.email, data.password);\r\n\r\n      // router.push(returnTo || PATH_AFTER_LOGIN);\r\n\r\n      if(data.email === defaultRootValues.email ){\r\n\r\n        router.push(returnTo || PATH_AFTER_LOGINROOT);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.message);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={2} sx={{ mb: 5 }}>\r\n      <Typography variant=\"h4\">Sign in </Typography>\r\n\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\">New user?</Typography>\r\n\r\n        {/* <Link component={RouterLink} href={paths.auth.jwt.register} variant=\"subtitle2\">\r\n          Create an account\r\n        </Link> */}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderForm = (\r\n    <Stack spacing={2.5}>\r\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n      <RHFTextField name=\"email\" label=\"Email address\"   />\r\n\r\n      <RHFTextField\r\n        name=\"password\"\r\n        label=\"Password\"\r\n       \r\n        type={password.value ? 'text' : 'password'}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={password.onToggle} edge=\"end\">\r\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      {/* <Link variant=\"body2\" color=\"inherit\" underline=\"always\" sx={{ alignSelf: 'flex-end' }}>\r\n        Forgot password?\r\n      </Link> */}\r\n\r\n      <LoadingButton\r\n        fullWidth\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        loading={isSubmitting}\r\n      >\r\n        Login\r\n      </LoadingButton>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      {renderHead}\r\n\r\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n        Use email : <strong>demo@minimals.cc</strong> / password :<strong> demo1234</strong>\r\n      </Alert>\r\n\r\n      {renderForm}\r\n    </FormProvider>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState } from 'react';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Link from '@mui/material/Link';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { RouterLink } from 'src/routes/components';\r\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\r\n// config\r\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\r\n// auth\r\nimport { useAuthContext } from 'src/auth/hooks';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function JwtRegisterView() {\r\n  const { register } = useAuthContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  const returnTo = searchParams.get('returnTo');\r\n\r\n  const password = useBoolean();\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string().required('First name required'),\r\n    lastName: Yup.string().required('Last name required'),\r\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n    password: Yup.string().required('Password is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(RegisterSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    try {\r\n      await register?.(data.email, data.password, data.firstName, data.lastName);\r\n\r\n      router.push(returnTo || PATH_AFTER_LOGIN);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setErrorMsg(typeof error === 'string' ? error : error.message);\r\n    }\r\n  });\r\n\r\n  const renderHead = (\r\n    <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\r\n      <Typography variant=\"h4\">Get started absolutely free</Typography>\r\n\r\n      <Stack direction=\"row\" spacing={0.5}>\r\n        <Typography variant=\"body2\"> Already have an account? </Typography>\r\n\r\n        <Link href={paths.auth.jwt.login} component={RouterLink} variant=\"subtitle2\">\r\n          Sign in\r\n        </Link>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  const renderTerms = (\r\n    <Typography\r\n      component=\"div\"\r\n      sx={{\r\n        color: 'text.secondary',\r\n        mt: 2.5,\r\n        typography: 'caption',\r\n        textAlign: 'center',\r\n      }}\r\n    >\r\n      {'By signing up, I agree to '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Terms of Service\r\n      </Link>\r\n      {' and '}\r\n      <Link underline=\"always\" color=\"text.primary\">\r\n        Privacy Policy\r\n      </Link>\r\n      .\r\n    </Typography>\r\n  );\r\n\r\n  const renderForm = (\r\n    <FormProvider methods={methods} onSubmit={onSubmit}>\r\n      <Stack spacing={2.5}>\r\n        {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\r\n\r\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n          <RHFTextField name=\"firstName\" label=\"First name\" />\r\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\r\n        </Stack>\r\n\r\n        <RHFTextField name=\"email\" label=\"Email address\" />\r\n\r\n        <RHFTextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type={password.value ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={password.onToggle} edge=\"end\">\r\n                  <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n\r\n        <LoadingButton\r\n          fullWidth\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n        >\r\n          Create account\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderHead}\r\n\r\n      {renderForm}\r\n\r\n      {renderTerms}\r\n    </>\r\n  );\r\n}\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"children\", \"className\", \"closeText\", \"color\", \"components\", \"componentsProps\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"slotProps\", \"slots\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled, createUseThemeProps } from '../zero-styled';\nimport useSlot from '../utils/useSlot';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nimport alertClasses, { getAlertUtilityClass } from './alertClasses';\nimport IconButton from '../IconButton';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useThemeProps = createUseThemeProps('MuiAlert');\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return _extends({}, theme.typography.body2, {\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(([, value]) => value.main && value.light).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(([, value]) => value.main && value.dark).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: _extends({\n        fontWeight: theme.typography.fontWeightMedium\n      }, theme.vars ? {\n        color: theme.vars.palette.Alert[`${color}FilledColor`],\n        backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n      } : {\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n        color: theme.palette.getContrastText(theme.palette[color].main)\n      })\n    }))]\n  });\n});\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n      action,\n      children,\n      className,\n      closeText = 'Close',\n      color,\n      components = {},\n      componentsProps = {},\n      icon,\n      iconMapping = defaultIconMapping,\n      onClose,\n      role = 'alert',\n      severity = 'success',\n      slotProps = {},\n      slots = {},\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: _extends({\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon\n    }, slots),\n    slotProps: _extends({}, componentsProps, slotProps)\n  };\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AlertRoot, _extends({\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, _extends({\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose\n      }, closeButtonProps, {\n        children: /*#__PURE__*/_jsx(CloseIconSlot, _extends({\n          fontSize: \"small\"\n        }, closeIconProps))\n      }))\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"],"names":["JwtLoginView","login","useAuthContext","router","useRouter","errorMsg","setErrorMsg","useState","returnTo","useSearchParams","get","password","useBoolean","LoginSchema","Yup","shape","email","required","defaultRootValues","methods","useForm","resolver","yupResolver","reset","handleSubmit","formState","isSubmitting","onSubmit","async","data","push","PATH_AFTER_LOGINROOT","error","console","message","renderHead","_jsxs","Stack","spacing","sx","mb","children","_jsx","Typography","variant","direction","renderForm","Alert","severity","RHFTextField","name","label","type","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","LoadingButton","fullWidth","color","size","loading","FormProvider","JwtRegisterView","register","RegisterSchema","firstName","lastName","defaultValues","PATH_AFTER_LOGIN","Link","href","paths","auth","jwt","component","RouterLink","renderTerms","mt","typography","textAlign","underline","xs","sm","_Fragment","createSvgIcon","d","_excluded","useThemeProps","createUseThemeProps","AlertRoot","styled","Paper","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","_ref","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","_extends","body2","backgroundColor","display","padding","variants","Object","entries","filter","_ref2","main","light","map","_ref3","colorSeverity","style","vars","alertClasses","_ref4","_ref5","border","_ref6","dark","_ref7","fontWeight","fontWeightMedium","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","minWidth","overflow","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","slots","other","_objectWithoutPropertiesLoose","classes","composeClasses","getAlertUtilityClass","useUtilityClasses","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseIcon","CloseButtonSlot","closeButtonProps","useSlot","elementType","CloseIconSlot","closeIconProps","elevation","clsx","title"],"sourceRoot":""}