{"version":3,"file":"static/js/752.6587b763.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/six/invoice-new-edit-details.js","sections/six/invoice-new-edit-address.js","sections/six/invoice-new-edit-status-date.js","sections/six/invoice-new-edit-form.js","sections/six/view.js","pages/dashboard/six.js","sections/address/address-list-dialog.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import sum from 'lodash/sum';\r\nimport { useCallback, useEffect ,useState} from 'react';\r\nimport { useFormContext, useFieldArray } from 'react-hook-form';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport { inputBaseClasses } from '@mui/material/InputBase';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Switch from '@mui/material/Switch';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// _mock\r\nimport { INVOICE_SERVICE_OPTIONS } from 'src/_mock';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { RHFSelect, RHFTextField, RHFUpload } from 'src/components/hook-form';\r\nimport { Upload } from 'src/components/upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditDetails() {\r\n  const { control, setValue, watch, resetField } = useFormContext();\r\n  const preview = useBoolean();\r\n  const [files, setFiles] = useState([]);\r\n\r\n\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'items',\r\n  });\r\n\r\n  const values = watch();\r\n\r\n  const totalOnRow = values.items.map((item) => item.quantity * item.price);\r\n\r\n  const subTotal = sum(totalOnRow);\r\n\r\n  const handleAdd = () => {\r\n    append({\r\n      title: '',\r\n      service: '',\r\n      coverUrl: '',\r\n      quantity: 1,\r\n      price: 0,\r\n      total: 0,\r\n    });\r\n  };\r\n\r\n  const handleRemove = (index) => {\r\n    remove(index);\r\n  };\r\n  // const handleDrops = useCallback(\r\n  //   (acceptedFiles) => {\r\n  //     const file = acceptedFiles[0];\r\n\r\n  //     const newFile = Object.assign(file, {\r\n  //       preview: URL.createObjectURL(file),\r\n  //     });\r\n\r\n  //     if (file) {\r\n  //       setValue('coverUrl', newFile, { shouldValidate: true });\r\n  //     }\r\n  //   },\r\n  //   [setValue]\r\n  // );\r\n\r\n  // const handleRemoveFiles = useCallback(() => {\r\n  //   setValue('coverUrl', null);\r\n  // }, [setValue]);\r\n\r\n  // const handleRemoveFile = useCallback(\r\n  //   (index) => {\r\n  //     setValue(`items[${index}].coverUrl`, null, { shouldValidate: true });\r\n  //     // Optionally, update the state to remove the image from the UI\r\n  //   },\r\n  //   [setValue]\r\n  // );\r\n\r\n  const handleDropMultiFile = useCallback(\r\n    (acceptedFiles) => {\r\n      const selectedFile = acceptedFiles[0]; // Select the first file only\r\n      if (selectedFile) {\r\n        try {\r\n          const newFile = Object.assign(selectedFile, {\r\n            preview: URL.createObjectURL(selectedFile),\r\n          });\r\n          setFiles([newFile]); // Set the state with the single selected file\r\n        } catch (error) {\r\n          console.error('Error creating object URL:', error);\r\n        }\r\n      }\r\n    },\r\n    [] // No dependencies needed for this function\r\n  );\r\n  \r\n\r\n  const handleRemoveFile = (inputFile) => {\r\n    const filesFiltered = files.filter((fileFiltered) => fileFiltered !== inputFile);\r\n    setFiles(filesFiltered);\r\n  };\r\n\r\n \r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles, index) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      // Check if a file is present\r\n      if (file) {\r\n        try {\r\n          const newFile = Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          });\r\n\r\n          setValue(`items[${index}].coverUrl`, newFile, { shouldValidate: true });\r\n          // Update UI to display uploaded image preview\r\n        } catch (error) {\r\n          console.error('Error creating object URL:', error);\r\n        }\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const handleClearService = useCallback(\r\n    (index) => {\r\n      resetField(`items[${index}].quantity`);\r\n      resetField(`items[${index}].price`);\r\n      resetField(`items[${index}].total`);\r\n    },\r\n    [resetField]\r\n  );\r\n\r\n  // const handleSelectService = useCallback(\r\n  //   (index, option) => {\r\n  //     setValue(\r\n  //       `items[${index}].price`,\r\n  //       INVOICE_SERVICE_OPTIONS.find((service) => service.name === option)?.price\r\n  //     );\r\n  //     setValue(\r\n  //       `items[${index}].total`,\r\n  //       values.items.map((item) => item.quantity * item.price)[index]\r\n  //     );\r\n  //   },\r\n  //   [setValue, values.items]\r\n  // );\r\n  const handleSelectService = useCallback(\r\n    (index, option) => {\r\n      const selectedService = INVOICE_SERVICE_OPTIONS.find((service) => service.name === option);\r\n      if (selectedService) {\r\n        // Update the service name only if a valid service is selected\r\n        setValue(`items[${index}].service`, selectedService.name);\r\n      }\r\n      // No changes to price and total\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const handleChangeQuantity = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].quantity`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const handleChangePrice = useCallback(\r\n    (event, index) => {\r\n      setValue(`items[${index}].price`, Number(event.target.value));\r\n      setValue(\r\n        `items[${index}].total`,\r\n        values.items.map((item) => item.quantity * item.price)[index]\r\n      );\r\n    },\r\n    [setValue, values.items]\r\n  );\r\n\r\n  const renderTotal = (\r\n    <Stack\r\n      spacing={2}\r\n      alignItems=\"flex-end\"\r\n      sx={{ mt: 3, textAlign: 'right', typography: 'body2' }}\r\n    >\r\n      <Stack direction=\"row\">\r\n        <Box sx={{ color: 'text.secondary' }}>Subtotal</Box>\r\n        <Box sx={{ width: 160, typography: 'subtitle2' }}>{fCurrency(subTotal) || '-'}</Box>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\r\n        Details:\r\n      </Typography>\r\n\r\n      <Stack divider={<Divider flexItem sx={{ borderStyle: 'dashed' }} />} spacing={3}>\r\n        {fields.map((item, index) => (\r\n          <Stack key={item.id} alignItems=\"flex-end\" spacing={1.5}>\r\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ width: 1 }}>\r\n              <RHFTextField\r\n                size=\"small\"\r\n                name={`items[${index}].title`}\r\n                label=\"Title\"\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{ maxWidth: { md: 350 } }}\r\n              />\r\n              <RHFUpload\r\n                name={`items[${index}].coverUrl`}\r\n                maxSize={3145728}\r\n                // size=\"small\"\r\n                onDrop={(acceptedFiles) => handleDrop(acceptedFiles, index)} // Pass index as an argument\r\n                onDelete={() => handleRemoveFile(index)}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n\r\n              <RHFSelect\r\n                name={`items[${index}].service`}\r\n                size=\"small\"\r\n                label=\"Role\"\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{\r\n                  maxWidth: { md: 160 },\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  value=\"\"\r\n                  onClick={() => handleClearService(index)}\r\n                  sx={{ fontStyle: 'italic', color: 'text.secondary' }}\r\n                >\r\n                  None\r\n                </MenuItem>\r\n\r\n                <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n                {INVOICE_SERVICE_OPTIONS.map((service) => (\r\n                  <MenuItem\r\n                    key={service.id}\r\n                    value={service.name}\r\n                    onClick={() => handleSelectService(index, service.name)}\r\n                  >\r\n                    {service.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </RHFSelect>\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].quantity`}\r\n                label=\"Quantity\"\r\n                placeholder=\"0\"\r\n                onChange={(event) => handleChangeQuantity(event, index)}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].price`}\r\n                label=\"Price\"\r\n                placeholder=\"0.00\"\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>&#8377;</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{ maxWidth: { md: 96 } }}\r\n              />\r\n\r\n              <RHFTextField\r\n                disabled\r\n                size=\"small\"\r\n                type=\"number\"\r\n                name={`items[${index}].total`}\r\n                label=\"Total\"\r\n                placeholder=\"0.00\"\r\n                value={values.items[index].total === 0 ? '' : values.items[index].total.toFixed(2)}\r\n                onChange={(event) => handleChangePrice(event, index)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>&#8377;</Box>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  maxWidth: { md: 104 },\r\n                  [`& .${inputBaseClasses.input}`]: {\r\n                    textAlign: { md: 'right' },\r\n                  },\r\n                }}\r\n              />\r\n            </Stack>\r\n\r\n            <Button\r\n              size=\"small\"\r\n              color=\"error\"\r\n              startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n              onClick={() => handleRemove(index)}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 3, borderStyle: 'dashed' }} />\r\n\r\n      <Stack\r\n        spacing={3}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n      >\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n          onClick={handleAdd}\r\n          sx={{ flexShrink: 0 }}\r\n        >\r\n          Add Item\r\n        </Button>\r\n      </Stack>\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Upload Report\"\r\n        />\r\n        <CardContent>\r\n          <Upload\r\n            multiple\r\n            name=\"UploadFile\"\r\n            files={files}\r\n            onDrop={handleDropMultiFile}\r\n            onRemove={handleRemoveFile}\r\n           \r\n            // onUpload={() => console.info('ON UPLOAD')}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      {renderTotal}\r\n    </Box>\r\n  );\r\n}\r\n","import { useFormContext } from 'react-hook-form';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useResponsive } from 'src/hooks/use-responsive';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n//\r\nimport { AddressListDialog } from '../address';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditAddress() {\r\n  const {\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const upMd = useResponsive('up', 'md');\r\n\r\n  const values = watch();\r\n\r\n  const { invoiceFrom, invoiceTo } = values;\r\n\r\n  const from = useBoolean();\r\n\r\n  const to = useBoolean();\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={{ xs: 3, md: 5 }}\r\n        direction={{ xs: 'column', md: 'row' }}\r\n        divider={\r\n          <Divider\r\n            flexItem\r\n            orientation={upMd ? 'vertical' : 'horizontal'}\r\n            sx={{ borderStyle: 'dashed' }}\r\n          />\r\n        }\r\n        sx={{ p: 3 }}\r\n      >\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              From:\r\n            </Typography>\r\n\r\n            <IconButton onClick={from.onTrue}>\r\n              <Iconify icon=\"solar:pen-bold\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <Stack spacing={1}>\r\n            <Typography variant=\"subtitle2\">{invoiceFrom.name}</Typography>\r\n            <Typography variant=\"body2\">{invoiceFrom.fullAddress}</Typography>\r\n            <Typography variant=\"body2\"> {invoiceFrom.phoneNumber}</Typography>\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: 1 }}>\r\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\r\n              To:\r\n            </Typography>\r\n\r\n            <IconButton onClick={to.onTrue}>\r\n              <Iconify icon={invoiceTo ? 'solar:pen-bold' : 'mingcute:add-line'} />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          {invoiceTo ? (\r\n            <Stack spacing={1}>\r\n              <Typography variant=\"subtitle2\">{invoiceTo.name}</Typography>\r\n              <Typography variant=\"body2\">{invoiceTo.fullAddress}</Typography>\r\n              <Typography variant=\"body2\"> {invoiceTo.phoneNumber}</Typography>\r\n            </Stack>\r\n          ) : (\r\n            <Typography typography=\"caption\" sx={{ color: 'error.main' }}>\r\n              {errors.invoiceTo?.message}\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={from.value}\r\n        onClose={from.onFalse}\r\n        selected={(selectedId) => invoiceFrom?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceFrom', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <AddressListDialog\r\n        title=\"Customers\"\r\n        open={to.value}\r\n        onClose={to.onFalse}\r\n        selected={(selectedId) => invoiceTo?.id === selectedId}\r\n        onSelect={(address) => setValue('invoiceTo', address)}\r\n        list={_addressBooks}\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\r\n            sx={{ alignSelf: 'flex-end' }}\r\n          >\r\n            New\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// components\r\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditStatusDate() {\r\n  const { control, watch } = useFormContext();\r\n\r\n  const values = watch();\r\n\r\n  return (\r\n    <Stack\r\n      spacing={2}\r\n      direction={{ xs: 'column', sm: 'row' }}\r\n      sx={{ p: 3, bgcolor: 'background.neutral' }}\r\n    >\r\n      <RHFTextField\r\n        disabled\r\n        name=\"invoiceNumber\"\r\n        label=\"Invoice number\"\r\n        value={values.invoiceNumber}\r\n      />\r\n\r\n      <RHFSelect\r\n        fullWidth\r\n        disabled\r\n        name=\"status\"\r\n        label=\"Status\"\r\n        InputLabelProps={{ shrink: true }}\r\n        PaperPropsSx={{ textTransform: 'capitalize' }}\r\n      >\r\n        {['paid', 'pending', 'overdue', 'draft'].map((option) => (\r\n          <MenuItem key={option} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </RHFSelect>\r\n      {/* <RHFTextField name=\"name\" label=\"Employee Name\" /> */}\r\n      <RHFTextField name=\"EmpID\" label=\"Employee ID\" />\r\n      <RHFTextField name=\"from\" label=\"From Destination\" />\r\n      <RHFTextField name=\"to\" label=\"To Destination\" />\r\n\r\n      {/* <RHFTextField name=\"startDate\" label=\"Start Date\" />\r\n      <RHFTextField name=\"endDate\" label=\"End Date\" /> */}\r\n\r\n      \r\n\r\n      <Controller\r\n        name=\"createDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"Start Date\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <Controller\r\n        name=\"dueDate\"\r\n        control={control}\r\n        render={({ field, fieldState: { error } }) => (\r\n          <DatePicker\r\n            label=\"End Date\"\r\n            value={field.value}\r\n            onChange={(newValue) => {\r\n              field.onChange(newValue);\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                fullWidth: true,\r\n                error: !!error,\r\n                helperText: error?.message,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useMemo } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\n// _mock\r\nimport { _addressBooks } from 'src/_mock';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport FormProvider from 'src/components/hook-form';\r\nimport { useSnackbar } from 'src/components/snackbar';\r\n//\r\nimport InvoiceNewEditDetails from './invoice-new-edit-details';\r\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\r\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceNewEditForm({ currentInvoice }) {\r\n  const router = useRouter();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const loadingSave = useBoolean();\r\n\r\n  const loadingSend = useBoolean();\r\n\r\n  const NewInvoiceSchema = Yup.object().shape({\r\n    invoiceTo: Yup.mixed().nullable().required('Invoice to is required'),\r\n    // EmpName: Yup.string().required('Name is required'),\r\n    EmpID: Yup.string().required('Emp_ID is required'),\r\n    from: Yup.string().required('Destination is required'),\r\n\r\n    to: Yup.string().required('Destination is required'),\r\n\r\n    coverUrl: Yup.string(),\r\n   \r\n    UploadFile: Yup.mixed().required('File is required'),\r\n\r\n    createDate: Yup.mixed().nullable().required('Create date is required'),\r\n    dueDate: Yup.mixed()\r\n      .required('Due date is required')\r\n      .test(\r\n        'date-min',\r\n        'Due date must be later than create date',\r\n        (value, { parent }) => value.getTime() > parent.createDate.getTime()\r\n      ),\r\n\r\n    // not required\r\n\r\n    // taxes: Yup.number(),\r\n    status: Yup.string(),\r\n    // discount: Yup.number(),\r\n    // shipping: Yup.number(),\r\n    invoiceFrom: Yup.mixed(),\r\n    // totalAmount: Yup.number(),\r\n    invoiceNumber: Yup.string(),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      invoiceNumber: currentInvoice?.invoiceNumber || 'INV-1990',\r\n      // EmpName: currentInvoice?.EmpName || '',\r\n      EmpID: currentInvoice?.EmpID || '',\r\n      from: currentInvoice?.from || '',\r\n      to: currentInvoice?.to || '',\r\n      // startDate:currentInvoice?.startDate || '',\r\n      // endDate: currentInvoice?.endDate || '',\r\n      createDate: currentInvoice?.createDate || null,\r\n      dueDate: currentInvoice?.dueDate || null,\r\n      // taxes: currentInvoice?.taxes || 0,\r\n      // shipping: currentInvoice?.shipping || 0,\r\n      status: currentInvoice?.status || '',\r\n      // discount: currentInvoice?.discount || 0,\r\n      invoiceFrom: currentInvoice?.invoiceFrom || _addressBooks[0],\r\n      invoiceTo: currentInvoice?.invoiceTo || null,\r\n      UploadFile: currentInvoice?.UploadFile || '',\r\n      items: currentInvoice?.items || [\r\n        {\r\n          title: '',\r\n          service: '',\r\n          coverUrl: '',\r\n          quantity: 1,\r\n          price: 0,\r\n          total: 0,\r\n        },\r\n      ],\r\n      // totalAmount: currentInvoice?.totalAmount || 0,\r\n    }),\r\n    [currentInvoice]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewInvoiceSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n  } = methods;\r\n  console.log('errors:', errors);\r\n\r\n  const handleSaveAsDraft = handleSubmit(async (data) => {\r\n    loadingSave.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSave.onFalse();\r\n      enqueueSnackbar('save the draft successfully!');\r\n      router.push(paths.dashboard.users.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSave.onFalse();\r\n    }\r\n  });\r\n\r\n  const handleCreateAndSend = handleSubmit(async (data) => {\r\n    loadingSend.onTrue();\r\n\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      loadingSend.onFalse();\r\n\r\n      enqueueSnackbar('Create successfully!');\r\n      router.push(paths.dashboard.users.root);\r\n      console.info('DATA', JSON.stringify(data, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n      loadingSend.onFalse();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormProvider methods={methods}>\r\n      <Card>\r\n        <InvoiceNewEditAddress />\r\n\r\n        <InvoiceNewEditStatusDate />\r\n\r\n        <InvoiceNewEditDetails />\r\n      </Card>\r\n\r\n      <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\r\n        <LoadingButton\r\n          color=\"inherit\"\r\n          size=\"large\"\r\n          variant=\"outlined\"\r\n          loading={loadingSave.value && isSubmitting}\r\n          onClick={handleSaveAsDraft}\r\n        >\r\n          Save as Draft\r\n        </LoadingButton>\r\n\r\n        <LoadingButton\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          loading={loadingSend.value && isSubmitting}\r\n          onClick={handleCreateAndSend}\r\n        >\r\n          {currentInvoice ? 'Update' : 'Create'} & Send\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\nInvoiceNewEditForm.propTypes = {\r\n  currentInvoice: PropTypes.object,\r\n};\r\n","// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from './invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SixView() {\r\n  const settings = useSettingsContext();\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Create a new invoice\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.users.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.users.six,\r\n          },\r\n          {\r\n            name: 'New Invoice',\r\n          },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm />\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { useParams } from 'src/routes/hooks';\r\n// sections\r\nimport SixView from 'src/sections/six/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageSix() {\r\n  const params = useParams();\r\n\r\n  const { id } = params;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Six</title>\r\n      </Helmet>\r\n\r\n      <SixView  id={`${id}`}/>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport SearchNotFound from 'src/components/search-not-found';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AddressListDialog({\r\n  title = 'Address Book',\r\n  list,\r\n  action,\r\n  //\r\n  open,\r\n  onClose,\r\n  //\r\n  selected,\r\n  onSelect,\r\n}) {\r\n  const [searchAddress, setSearchAddress] = useState('');\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: list,\r\n    query: searchAddress,\r\n  });\r\n\r\n  const notFound = !dataFiltered.length && !!searchAddress;\r\n\r\n  const handleSearchAddress = useCallback((event) => {\r\n    setSearchAddress(event.target.value);\r\n  }, []);\r\n\r\n  const handleSelectAddress = useCallback(\r\n    (address) => {\r\n      onSelect(address);\r\n      setSearchAddress('');\r\n      onClose();\r\n    },\r\n    [onClose, onSelect]\r\n  );\r\n\r\n  const renderList = (\r\n    <Stack\r\n      spacing={0.5}\r\n      sx={{\r\n        p: 0.5,\r\n        maxHeight: 80 * 8,\r\n        overflowX: 'hidden',\r\n      }}\r\n    >\r\n      {dataFiltered.map((address) => (\r\n        <Stack\r\n          key={address.id}\r\n          spacing={0.5}\r\n          component={ListItemButton}\r\n          selected={selected(`${address.id}`)}\r\n          onClick={() => handleSelectAddress(address)}\r\n          sx={{\r\n            py: 1,\r\n            px: 1.5,\r\n            borderRadius: 1,\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            [`&.${listItemButtonClasses.selected}`]: {\r\n              bgcolor: 'action.selected',\r\n              '&:hover': {\r\n                bgcolor: 'action.selected',\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography variant=\"subtitle2\">{address.name}</Typography>\r\n\r\n            {address.primary && <Label color=\"info\">Default</Label>}\r\n          </Stack>\r\n\r\n          {address.company && (\r\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\r\n          )}\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {address.fullAddress}\r\n          </Typography>\r\n\r\n          {address.phoneNumber && (\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              {address.phoneNumber}\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      ))}\r\n    </Stack>\r\n  );\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ p: 3, pr: 1.5 }}\r\n      >\r\n        <Typography variant=\"h6\"> {title} </Typography>\r\n\r\n        {action && action}\r\n      </Stack>\r\n\r\n      <Stack sx={{ p: 2, pt: 0 }}>\r\n        <TextField\r\n          value={searchAddress}\r\n          onChange={handleSearchAddress}\r\n          placeholder=\"Search...\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      {notFound ? (\r\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\r\n      ) : (\r\n        renderList\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nAddressListDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  list: PropTypes.array,\r\n  onClose: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selected: PropTypes.func,\r\n  title: PropTypes.string,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, query }) {\r\n  if (query) {\r\n    return inputData.filter(\r\n      (address) =>\r\n        address.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        address.fullAddress.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\r\n        `${address.company}`.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","InvoiceNewEditDetails","control","setValue","watch","resetField","useFormContext","files","setFiles","useBoolean","useState","fields","append","remove","useFieldArray","values","totalOnRow","items","item","quantity","price","subTotal","sum","handleDropMultiFile","useCallback","acceptedFiles","selectedFile","newFile","Object","assign","preview","URL","createObjectURL","error","console","handleRemoveFile","inputFile","filesFiltered","filter","fileFiltered","handleDrop","index","file","concat","shouldValidate","handleClearService","handleSelectService","option","selectedService","INVOICE_SERVICE_OPTIONS","find","service","handleChangeQuantity","event","Number","value","handleChangePrice","renderTotal","spacing","textAlign","fCurrency","p","mb","divider","Divider","flexItem","borderStyle","xs","md","RHFTextField","size","label","InputLabelProps","shrink","maxWidth","RHFUpload","maxSize","onDrop","onDelete","RHFSelect","MenuItem","onClick","fontStyle","id","type","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","total","toFixed","inputBaseClasses","input","Button","startIcon","Iconify","handleRemove","my","handleAdd","title","coverUrl","Card","CardHeader","CardContent","Upload","multiple","onRemove","InvoiceNewEditAddress","_errors$invoiceTo","formState","errors","upMd","useResponsive","invoiceFrom","invoiceTo","from","to","orientation","IconButton","onTrue","fullAddress","phoneNumber","message","AddressListDialog","open","onClose","onFalse","selected","selectedId","onSelect","address","list","_addressBooks","alignSelf","InvoiceNewEditStatusDate","sm","invoiceNumber","fullWidth","PaperPropsSx","textTransform","Controller","render","field","fieldState","DatePicker","newValue","slotProps","textField","helperText","_ref2","InvoiceNewEditForm","currentInvoice","router","useRouter","enqueueSnackbar","useSnackbar","loadingSave","loadingSend","NewInvoiceSchema","Yup","shape","nullable","required","EmpID","UploadFile","createDate","dueDate","test","parent","getTime","status","defaultValues","useMemo","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","log","handleSaveAsDraft","async","Promise","resolve","setTimeout","push","paths","dashboard","users","root","info","JSON","stringify","data","handleCreateAndSend","FormProvider","justifyContent","LoadingButton","loading","SixView","settings","useSettingsContext","Container","themeStretch","six","PageSix","params","useParams","Helmet","searchAddress","setSearchAddress","dataFiltered","inputData","query","toLowerCase","indexOf","company","applyFilter","notFound","handleSearchAddress","handleSelectAddress","renderList","maxHeight","overflowX","ListItemButton","py","px","flexDirection","listItemButtonClasses","primary","Label","Dialog","pr","pt","TextField","SearchNotFound","pb"],"sourceRoot":""}