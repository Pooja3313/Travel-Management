{"version":3,"file":"static/js/255.c053163c.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","components/custom-dialog/custom-dialog.js","components/table/utils.js","components/table/use-table.js","components/empty-content/empty-content.js","components/table/table-no-data.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","sections/two/user-table-row.js","sections/two/user-table-toolbar.js","sections/two/user-table-filters-result.js","sections/two/view.js","pages/dashboard/two.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ConfirmDialog({ title, content, action, open, onClose, ...other }) {\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\r\n\r\n      <DialogActions>\r\n        {action}\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  content: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n    return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n  }\r\n  \r\n  function descendingComparator(a, b, orderBy) {\r\n    if (a[orderBy] === null) {\r\n      return 1;\r\n    }\r\n    if (b[orderBy] === null) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  export function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  ","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n  \r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EmptyContent({ title, imgUrl, action, filled, description, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      flexGrow={1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        px: 3,\r\n        height: 1,\r\n        ...(filled && {\r\n          borderRadius: 2,\r\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"empty content\"\r\n        src={imgUrl || '/assets/icons/empty/ic_content.svg'}\r\n        sx={{ width: 1, maxWidth: 160 }}\r\n      />\r\n\r\n      {title && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {description && (\r\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nEmptyContent.propTypes = {\r\n  action: PropTypes.node,\r\n  description: PropTypes.string,\r\n  filled: PropTypes.bool,\r\n  imgUrl: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n//\r\n// import EmptyContent from '../empty-content';\r\nimport EmptyContent from '../empty-content/empty-content';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ notFound, sx }) {\r\n  return (\r\n    <TableRow>\r\n      {notFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n              ...sx,\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  notFound: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: \"1px\",\r\n  height: \"1px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  whiteSpace: \"nowrap\",\r\n  clip: \"rect(0 0 0 0)\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {/* labels i.e. image,nAme */}\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  // dense,\r\n  // onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {/* {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )} */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { useState, useCallback } from 'react';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport {\r\n  _EmpList,\r\n  USER_STATUS_OPTIONS,\r\n  _role,\r\n  _accommodation,\r\n  _transportation,\r\n  _foodNeeded,\r\n  _foodOption,\r\n} from 'src/_mock';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableRow({ row, selected, onSelectRow, onDeleteRow }) {\r\n  const {\r\n    EmpName,\r\n    EmpID,\r\n    role,\r\n    department,\r\n    projectTitle,\r\n    from,\r\n    to,\r\n    startDate,\r\n    endDate,\r\n    purpose,\r\n    accommodation,\r\n    transportation,\r\n    FoodNeededs,\r\n    foodOption,\r\n    status,\r\n    avatarUrl,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const [currentStatus, setCurrentStatus] = useState(status);\r\n\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={EmpName} src={avatarUrl} sx={{ mr: 2 }} />\r\n\r\n          <ListItemText\r\n            primary={EmpID}\r\n            // secondary={EmpName}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              component: 'span',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{EmpName}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{role}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{department}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{projectTitle}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{from}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{to}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{startDate}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{endDate}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{purpose}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{accommodation}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{transportation}</TableCell>\r\n        <TableCell align=\"center\" sx={{ whiteSpace: 'nowrap' }}>\r\n          {FoodNeededs}\r\n        </TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{foodOption}</TableCell>\r\n\r\n\r\n        <TableCell>\r\n          <Label\r\n            variant=\"soft\"\r\n            color={\r\n              (status === 'approve' && 'success') ||\r\n              // (status === 'pending' && 'warning') ||\r\n              // (status === 'reject' && 'error') ||\r\n              'default'\r\n            }\r\n          >\r\n            {status}\r\n          </Label>\r\n        </TableCell>\r\n        <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  // onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  roleOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('EmpName', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterRole = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'role',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 200 },\r\n          }}\r\n        >\r\n          <InputLabel>Role</InputLabel>\r\n\r\n          <Select\r\n            multiple\r\n            value={filters.role}\r\n            onChange={handleFilterRole}\r\n            input={<OutlinedInput label=\"Roles\" />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            MenuProps={{\r\n              PaperProps: {\r\n                sx: { maxHeight: 240 },\r\n              },\r\n            }}\r\n          >\r\n            {roleOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.role.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableToolbar.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  roleOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStatus = () => {\r\n    onFilters('status', 'all');\r\n  };\r\n\r\n  const handleRemoveRole = (inputValue) => {\r\n    const newValue = filters.role.filter((item) => item !== inputValue);\r\n    onFilters('role', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {filters.status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.role.length && (\r\n          <Block label=\"Role:\">\r\n            {filters.role.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveRole(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n       \r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nUserTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// _mock\r\nimport { _EmpList,_invoices,_role ,STATUS_OPTIONS } from 'src/_mock';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\nimport UserTableRow from './user-table-row';\r\nimport UserTableToolbar from './user-table-toolbar';\r\nimport UserTableFiltersResult from './user-table-filters-result';\r\n// import AnalyticsWidgetSummary from './analytics-widget-summary';\r\n// import SevenView from './Reimburse_View ';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// const STATUS_OPTIONSS = [{ value: 'approve', label: 'Approve' }, ...STATUS_OPTIONS];\r\n\r\nconst TABLE_HEAD = [\r\n  \r\n  { id: 'EmpID', label: ' EmpID', width: 50 },\r\n  { id: 'EmpName', label: 'EmpName', width:50 },\r\n  { id: 'role', label: 'Roles', width: 50 },\r\n  { id: 'department', label: 'Department', width: 50 }, \r\n  { id: 'projectTitle', label: 'ProjectTitle', width: 50 }, \r\n  { id: 'from', label: 'From', width: 50 },\r\n  { id: 'to', label: 'To', width: 50 },\r\n  { id: 'startDate', label: 'Startdate', width: 50 },\r\n  { id: 'endDate', label: 'Enddate', width: 50 },\r\n  { id: 'purpose', label: 'Purpose', width:50 },\r\n  { id: 'accommodation', label: 'Accommodation', width: 50 },\r\n  { id: 'transportation', label: 'Transportation', width: 50 },\r\n  { id: 'foodNeeded', label: 'FoodNeeded', width: 50 },\r\n  { id: 'foodOption', label: 'FoodOptions', width: 50 },\r\n  { id: 'status', label: 'Status', width: 50 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  EmpName: '',\r\n  role: [],\r\n  status: '',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TwoView() {\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_EmpList);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  \r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Travel Trip List\"\r\n          links={[\r\n          // { name: 'Dashboard', href: paths.dashboard.group.root },\r\n          //  { name: 'TripList', href: paths.dashboard.group.five},\r\n           { name: 'List'},\r\n          \r\n            \r\n          ]}\r\n      \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n \r\n {/* <Grid container spacing={3}>\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"All Status\"\r\n            total={20}\r\n            color=\"info\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Approve\"\r\n            total={6}\r\n            color=\"success\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Pending\"\r\n            total={10}\r\n            color=\"warning\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Reject\"\r\n            total={4}\r\n            color=\"error\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n        </Grid> */}\r\n\r\n        <Card>\r\n        \r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: (theme) => `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                iconPosition=\"end\"\r\n                value={tab.value}\r\n                label={tab.label}\r\n                icon={\r\n                  <Label\r\n                    // variant={\r\n                    //   ((tab.value === 'all' || tab.value === filters.status) && 'filled') || 'soft'\r\n                    // }\r\n                    color={\r\n                      (tab.value === 'approve' && 'success') ||\r\n                      // (tab.value === 'pending' && 'warning') ||\r\n                      // (tab.value === 'reject' && 'error') ||\r\n                      'default'\r\n                    }\r\n                  >\r\n                    {/* {tab.value === 'all' && _EmpList.length} */}\r\n                    \r\n                    {/* {tab.value === 'pending' &&\r\n                      _EmpList.filter((user) => user.status === 'pending').length} */}\r\n                    {tab.value === 'approve' &&\r\n                      _EmpList.filter((user) => user.status === 'approve').length}\r\n                    {/* {tab.value === 'reject' &&\r\n                      _EmpList.filter((user) => user.status === 'reject').length} */}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n      \r\n\r\n          <UserTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            roleOptions={_role}\r\n          />\r\n\r\n          {canReset && (\r\n            <UserTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <UserTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        // onEditRow={() => handleEditRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { EmpName, status, role } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (EmpName) {\r\n    inputData = inputData.filter(\r\n      (user) => user.EmpName.toLowerCase().indexOf(EmpName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n    // Filter for only \"Approve\" status\r\n    if (status !== 'all') {\r\n      inputData = inputData.filter((user) => user.status === 'approve');\r\n    }\r\n\r\n  if (role.length) {\r\n    inputData = inputData.filter((user) => role.includes(user.role));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport TwoView from 'src/sections/two/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageTwo() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Two</title>\r\n      </Helmet>\r\n\r\n      <TwoView />\r\n    </>\r\n  );\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","ConfirmDialog","title","content","open","onClose","Dialog","fullWidth","maxWidth","DialogTitle","pb","DialogContent","DialogActions","Button","onClick","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","dense","setDense","useState","defaultDense","setPage","defaultCurrentPage","setOrderBy","defaultOrderBy","setRowsPerPage","defaultRowsPerPage","setOrder","defaultOrder","selected","setSelected","defaultSelected","onSort","useCallback","id","onSelectRow","inputValue","newSelected","includes","filter","value","onChangeRowsPerPage","event","parseInt","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","ceil","EmptyContent","imgUrl","filled","description","justifyContent","px","theme","alpha","palette","grey","border","concat","alt","src","textAlign","TableNoData","notFound","TableRow","TableCell","colSpan","py","p","TableEmptyRows","visuallyHidden","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","rowsPerPageOptions","TablePagination","borderTopColor","UserTableRow","row","onDeleteRow","EmpName","EmpID","role","department","projectTitle","from","to","startDate","endDate","purpose","accommodation","transportation","FoodNeededs","foodOption","status","avatarUrl","confirm","useBoolean","popover","usePopover","currentStatus","setCurrentStatus","hover","Avatar","ListItemText","primary","primaryTypographyProps","secondaryTypographyProps","Label","IconButton","onOpen","Iconify","CustomPopover","arrow","MenuItem","onTrue","onFalse","UserTableToolbar","filters","onFilters","roleOptions","handleFilterName","handleFilterRole","split","spacing","xs","md","FormControl","InputLabel","Select","multiple","input","OutlinedInput","renderValue","join","MenuProps","PaperProps","maxHeight","option","disableRipple","size","TextField","placeholder","InputProps","startAdornment","InputAdornment","UserTableFiltersResult","onResetFilters","results","flexWrap","Block","Chip","onDelete","handleRemoveStatus","item","newValue","handleRemoveRole","startIcon","_ref2","Paper","borderStyle","TABLE_HEAD","defaultFilters","TwoView","table","settings","useSettingsContext","useRouter","tableData","setTableData","_EmpList","setFilters","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","user","toLowerCase","indexOf","applyFilter","dataInPage","slice","denseHeight","canReset","isEqual","handleFilters","prevState","handleDeleteRow","deleteRow","handleDeleteRows","deleteRows","handleFilterStatus","handleResetFilters","Container","themeStretch","mb","Card","Tabs","boxShadow","STATUS_OPTIONS","tab","Tab","iconPosition","_role","pt","TableContainer","Tooltip","Scrollbar","Table","TableBody","count","onPageChange","onRowsPerPageChange","PageTwo","Helmet"],"sourceRoot":""}