{"version":3,"file":"static/js/372.5871331e.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","components/custom-date-range-picker/utils.js","components/custom-dialog/custom-dialog.js","components/table/utils.js","components/table/use-table.js","components/empty-content/empty-content.js","components/table/table-no-data.js","components/table/table-empty-rows.js","components/table/table-head-custom.js","components/table/table-selected-action.js","components/table/table-pagination-custom.js","sections/one/user-table-row.js","sections/one/user-table-toolbar.js","sections/one/user-table-filters-result.js","sections/one/analytics-widget-summary.js","sections/one/invoice-analytic.js","sections/one/invoice-table-row.js","sections/one/invoice-table-toolbar.js","sections/one/invoice-table-filters-result.js","sections/one/Reimburse_View .js","sections/one/view.js","pages/dashboard/one.js","utils/format-number.js","utils/format-time.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\n// routes\r\nimport { RouterLink } from 'src/routes/components';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} href={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\n//\r\nimport LinkItem from './link-item';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: '50%',\r\n        bgcolor: 'text.disabled',\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { isSameDay, isSameMonth, getYear } from 'date-fns';\r\n// utils\r\nimport { fDate } from 'src/utils/format-time';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function shortDateLabel(startDate, endDate) {\r\n  const getCurrentYear = new Date().getFullYear();\r\n\r\n  const startDateYear = startDate ? getYear(startDate) : null;\r\n\r\n  const endDateYear = endDate ? getYear(endDate) : null;\r\n\r\n  const currentYear = getCurrentYear === startDateYear && getCurrentYear === endDateYear;\r\n\r\n  const sameDay = startDate && endDate ? isSameDay(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  const sameMonth =\r\n    startDate && endDate ? isSameMonth(new Date(startDate), new Date(endDate)) : false;\r\n\r\n  if (currentYear) {\r\n    if (sameMonth) {\r\n      if (sameDay) {\r\n        return fDate(endDate, 'dd MMM yy');\r\n      }\r\n      return `${fDate(startDate, 'dd')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n    }\r\n    return `${fDate(startDate, 'dd MMM')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n  }\r\n\r\n  return `${fDate(startDate, 'dd MMM yy')} - ${fDate(endDate, 'dd MMM yy')}`;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ConfirmDialog({ title, content, action, open, onClose, ...other }) {\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose} {...other}>\r\n      <DialogTitle sx={{ pb: 2 }}>{title}</DialogTitle>\r\n\r\n      {content && <DialogContent sx={{ typography: 'body2' }}> {content} </DialogContent>}\r\n\r\n      <DialogActions>\r\n        {action}\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmDialog.propTypes = {\r\n  action: PropTypes.node,\r\n  content: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  title: PropTypes.string,\r\n};\r\n","// ----------------------------------------------------------------------\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n    return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n  }\r\n  \r\n  function descendingComparator(a, b, orderBy) {\r\n    if (a[orderBy] === null) {\r\n      return 1;\r\n    }\r\n    if (b[orderBy] === null) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  export function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  ","import { useState, useCallback } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTable(props) {\r\n  const [dense, setDense] = useState(!!props?.defaultDense);\r\n\r\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\r\n  \r\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\r\n\r\n  const [order, setOrder] = useState(props?.defaultOrder || 'asc');\r\n\r\n  const [selected, setSelected] = useState(props?.defaultSelected || []);\r\n\r\n  const onSort = useCallback(\r\n    (id) => {\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (id !== '') {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const onSelectRow = useCallback(\r\n    (inputValue) => {\r\n      const newSelected = selected.includes(inputValue)\r\n        ? selected.filter((value) => value !== inputValue)\r\n        : [...selected, inputValue];\r\n\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const onChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const onChangeDense = useCallback((event) => {\r\n    setDense(event.target.checked);\r\n  }, []);\r\n\r\n  const onSelectAllRows = useCallback((checked, inputValue) => {\r\n    if (checked) {\r\n      setSelected(inputValue);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  }, []);\r\n\r\n  const onChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const onResetPage = useCallback(() => {\r\n    setPage(0);\r\n  }, []);\r\n\r\n  const onUpdatePageDeleteRow = useCallback(\r\n    (totalRowsInPage) => {\r\n      setSelected([]);\r\n      if (page) {\r\n        if (totalRowsInPage < 2) {\r\n          setPage(page - 1);\r\n        }\r\n      }\r\n    },\r\n    [page]\r\n  );\r\n\r\n  const onUpdatePageDeleteRows = useCallback(\r\n    ({ totalRows, totalRowsInPage, totalRowsFiltered }) => {\r\n      const totalSelected = selected.length;\r\n\r\n      setSelected([]);\r\n\r\n      if (page) {\r\n        if (totalSelected === totalRowsInPage) {\r\n          setPage(page - 1);\r\n        } else if (totalSelected === totalRowsFiltered) {\r\n          setPage(0);\r\n        } else if (totalSelected > totalRowsInPage) {\r\n          const newPage = Math.ceil((totalRows - totalSelected) / rowsPerPage) - 1;\r\n          setPage(newPage);\r\n        }\r\n      }\r\n    },\r\n    [page, rowsPerPage, selected.length]\r\n  );\r\n\r\n  return {\r\n    dense,\r\n    order,\r\n    page,\r\n    orderBy,\r\n    rowsPerPage,\r\n    //\r\n    selected,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    //\r\n    onSort,\r\n    onChangePage,\r\n    onChangeDense,\r\n    onResetPage,\r\n    onChangeRowsPerPage,\r\n    onUpdatePageDeleteRow,\r\n    onUpdatePageDeleteRows,\r\n    //\r\n    setPage,\r\n    setDense,\r\n    setOrder,\r\n    setOrderBy,\r\n    setSelected,\r\n    setRowsPerPage,\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function EmptyContent({ title, imgUrl, action, filled, description, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      flexGrow={1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{\r\n        px: 3,\r\n        height: 1,\r\n        ...(filled && {\r\n          borderRadius: 2,\r\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n          border: (theme) => `dashed 1px ${alpha(theme.palette.grey[500], 0.08)}`,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box\r\n        component=\"img\"\r\n        alt=\"empty content\"\r\n        src={imgUrl || '/assets/icons/empty/ic_content.svg'}\r\n        sx={{ width: 1, maxWidth: 160 }}\r\n      />\r\n\r\n      {title && (\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"span\"\r\n          sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n\r\n      {description && (\r\n        <Typography variant=\"caption\" sx={{ mt: 1, color: 'text.disabled', textAlign: 'center' }}>\r\n          {description}\r\n        </Typography>\r\n      )}\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nEmptyContent.propTypes = {\r\n  action: PropTypes.node,\r\n  description: PropTypes.string,\r\n  filled: PropTypes.bool,\r\n  imgUrl: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n//\r\n// import EmptyContent from '../empty-content';\r\nimport EmptyContent from '../empty-content/empty-content';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ notFound, sx }) {\r\n  return (\r\n    <TableRow>\r\n      {notFound ? (\r\n        <TableCell colSpan={12}>\r\n          <EmptyContent\r\n            filled\r\n            title=\"No Data\"\r\n            sx={{\r\n              py: 10,\r\n              ...sx,\r\n            }}\r\n          />\r\n        </TableCell>\r\n      ) : (\r\n        <TableCell colSpan={12} sx={{ p: 0 }} />\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  notFound: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n// @mui\r\nimport Box from \"@mui/material/Box\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: \"1px\",\r\n  height: \"1px\",\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  whiteSpace: \"nowrap\",\r\n  clip: \"rect(0 0 0 0)\",\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableHeadCustom({\r\n  order,\r\n  orderBy,\r\n  rowCount = 0,\r\n  headLabel,\r\n  numSelected = 0,\r\n  onSort,\r\n  onSelectAllRows,\r\n  sx,\r\n}) {\r\n  return (\r\n    <TableHead sx={sx}>\r\n      <TableRow>\r\n        {onSelectAllRows && (\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={!!numSelected && numSelected < rowCount}\r\n              checked={!!rowCount && numSelected === rowCount}\r\n              onChange={(event) => onSelectAllRows(event.target.checked)}\r\n            />\r\n          </TableCell>\r\n        )}\r\n\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || \"left\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            {onSort ? (\r\n              <TableSortLabel\r\n                hideSortIcon\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : \"asc\"}\r\n                onClick={() => onSort(headCell.id)}\r\n              >\r\n                {/* labels i.e. image,nAme */}\r\n                {headCell.label}\r\n\r\n                {orderBy === headCell.id ? (\r\n                  <Box sx={{ ...visuallyHidden }}>\r\n                    {order === \"desc\"\r\n                      ? \"sorted descending\"\r\n                      : \"sorted ascending\"}\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            ) : (\r\n              headCell.label\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nTableHeadCustom.propTypes = {\r\n  sx: PropTypes.object,\r\n  onSort: PropTypes.func,\r\n  orderBy: PropTypes.string,\r\n  headLabel: PropTypes.array,\r\n  rowCount: PropTypes.number,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]),\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableSelectedAction({\r\n  dense,\r\n  action,\r\n  rowCount,\r\n  numSelected,\r\n  onSelectAllRows,\r\n  sx,\r\n  ...other\r\n}) {\r\n  if (!numSelected) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      sx={{\r\n        pl: 1,\r\n        pr: 2,\r\n        top: 0,\r\n        left: 0,\r\n        width: 1,\r\n        zIndex: 9,\r\n        height: 58,\r\n        position: 'absolute',\r\n        bgcolor: 'primary.lighter',\r\n        ...(dense && {\r\n          height: 38,\r\n        }),\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Checkbox\r\n        indeterminate={!!numSelected && numSelected < rowCount}\r\n        checked={!!rowCount && numSelected === rowCount}\r\n        onChange={(event) => onSelectAllRows(event.target.checked)}\r\n      />\r\n\r\n      <Typography\r\n        variant=\"subtitle2\"\r\n        sx={{\r\n          ml: 2,\r\n          flexGrow: 1,\r\n          color: 'primary.main',\r\n          ...(dense && {\r\n            ml: 3,\r\n          }),\r\n        }}\r\n      >\r\n        {numSelected} selected\r\n      </Typography>\r\n\r\n      {action && action}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nTableSelectedAction.propTypes = {\r\n  action: PropTypes.node,\r\n  dense: PropTypes.bool,\r\n  numSelected: PropTypes.number,\r\n  onSelectAllRows: PropTypes.func,\r\n  rowCount: PropTypes.number,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TablePaginationCustom({\r\n  // dense,\r\n  // onChangeDense,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box sx={{ position: 'relative', ...sx }}>\r\n      <TablePagination\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        {...other}\r\n        sx={{\r\n          borderTopColor: 'transparent',\r\n        }}\r\n      />\r\n\r\n      {/* {onChangeDense && (\r\n        <FormControlLabel\r\n          label=\"Dense\"\r\n          control={<Switch checked={dense} onChange={onChangeDense} />}\r\n          sx={{\r\n            pl: 2,\r\n            py: 1.5,\r\n            top: 0,\r\n            position: {\r\n              sm: 'absolute',\r\n            },\r\n          }}\r\n        />\r\n      )} */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationCustom.propTypes = {\r\n  dense: PropTypes.bool,\r\n  onChangeDense: PropTypes.func,\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { useState, useCallback } from 'react';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\n//\r\nimport {\r\n  _EmpList,\r\n  USER_STATUS_OPTIONS,\r\n  _role,\r\n  _accommodation,\r\n  _transportation,\r\n  _foodNeeded,\r\n  _foodOption,\r\n} from 'src/_mock';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableRow({ row, selected, onSelectRow, onDeleteRow }) {\r\n  const {\r\n    EmpName,\r\n    EmpID,\r\n    role,\r\n    department,\r\n    projectTitle,\r\n    from,\r\n    to,\r\n    startDate,\r\n    endDate,\r\n    purpose,\r\n    accommodation,\r\n    transportation,\r\n    FoodNeededs,\r\n    foodOption,\r\n    status,\r\n    avatarUrl,\r\n  } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const [currentStatus, setCurrentStatus] = useState(status);\r\n\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={EmpName} src={avatarUrl} sx={{ mr: 2 }} />\r\n\r\n          <ListItemText\r\n            primary={EmpID}\r\n            // secondary={EmpName}\r\n            primaryTypographyProps={{ typography: 'body2' }}\r\n            secondaryTypographyProps={{\r\n              component: 'span',\r\n              color: 'text.disabled',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{EmpName}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{role}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{department}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{projectTitle}</TableCell>\r\n\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{from}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{to}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{startDate}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{endDate}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{purpose}</TableCell>\r\n        <TableCell   sx={{ whiteSpace: 'nowrap' }}>{accommodation}</TableCell>\r\n        <TableCell   sx={{ whiteSpace: 'nowrap' }}>{transportation}</TableCell>\r\n        <TableCell align=\"center\" sx={{ whiteSpace: 'nowrap'}}>{FoodNeededs}</TableCell>\r\n        <TableCell sx={{ whiteSpace: 'nowrap' }}>{foodOption}</TableCell>\r\n\r\n        <TableCell >\r\n          <FormControl sx={{ minWidth: 120 }}>\r\n            <Select\r\n              value={currentStatus}\r\n              onChange={handleChangeStatus}\r\n              displayEmpty\r\n              inputProps={{ 'aria-label': 'Select Status' }}\r\n            >\r\n              {USER_STATUS_OPTIONS.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1, whiteSpace: 'nowrap' }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  // onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  roleOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('EmpName', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterRole = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'role',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 200 },\r\n          }}\r\n        >\r\n          <InputLabel>Role</InputLabel>\r\n\r\n          <Select\r\n            multiple\r\n            value={filters.role}\r\n            onChange={handleFilterRole}\r\n            input={<OutlinedInput label=\"Roles\" />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            MenuProps={{\r\n              PaperProps: {\r\n                sx: { maxHeight: 240 },\r\n              },\r\n            }}\r\n          >\r\n            {roleOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.role.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nUserTableToolbar.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  roleOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const handleRemoveStatus = () => {\r\n    onFilters('status', 'all');\r\n  };\r\n\r\n  const handleRemoveRole = (inputValue) => {\r\n    const newValue = filters.role.filter((item) => item !== inputValue);\r\n    onFilters('role', newValue);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {filters.status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {!!filters.role.length && (\r\n          <Block label=\"Role:\">\r\n            {filters.role.map((item) => (\r\n              <Chip key={item} label={item} size=\"small\" onDelete={() => handleRemoveRole(item)} />\r\n            ))}\r\n          </Block>\r\n        )}\r\n       \r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nUserTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n// theme\r\nimport { bgGradient } from 'src/theme/css';\r\n// utils\r\nimport { fShortenNumber } from 'src/utils/format-number';\r\n// theme\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsWidgetSummary({\r\n  title,\r\n  total,\r\n  icon,\r\n  color = 'primary',\r\n  sx,\r\n  ...other\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Stack\r\n      alignItems=\"center\"\r\n      sx={{\r\n        ...bgGradient({\r\n          direction: '135deg',\r\n          startColor: alpha(theme.palette[color].light, 0.2),\r\n          endColor: alpha(theme.palette[color].main, 0.2),\r\n        }),\r\n        py: 5,\r\n        borderRadius: 2,\r\n        textAlign: 'center',\r\n        color: `${color}.darker`,\r\n        backgroundColor: 'common.white',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {icon && <Box sx={{ width: 64, height: 64, mb: 1 }}>{icon}</Box>}\r\n\r\n      <Typography variant=\"h3\">{fShortenNumber(total)}</Typography>\r\n\r\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.64 }}>\r\n        {title}\r\n      </Typography>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nAnalyticsWidgetSummary.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n// utils\r\nimport { fShortenNumber, fCurrency } from 'src/utils/format-number';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceAnalytic({ title, total, icon, color, percent, price }) {\r\n  return (\r\n    <Stack\r\n      spacing={2.5}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{ width: 1, minWidth: 200 }}\r\n    >\r\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ position: 'relative' }}>\r\n        <Iconify icon={icon} width={32} sx={{ color, position: 'absolute' }} />\r\n\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={percent}\r\n          size={56}\r\n          thickness={2}\r\n          sx={{ color, opacity: 0.48 }}\r\n        />\r\n\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={56}\r\n          thickness={3}\r\n          sx={{\r\n            top: 0,\r\n            left: 0,\r\n            opacity: 0.48,\r\n            position: 'absolute',\r\n            color: (theme) => alpha(theme.palette.grey[500], 0.16),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      <Stack spacing={0.5}>\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n\r\n        <Box component=\"span\" sx={{ color: 'text.disabled', typography: 'body2' }}>\r\n          {fShortenNumber(total)} invoices\r\n        </Box>\r\n\r\n        <Typography variant=\"subtitle2\">{fCurrency(price)}</Typography>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceAnalytic.propTypes = {\r\n  color: PropTypes.string,\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  percent: PropTypes.number,\r\n  price: PropTypes.number,\r\n  title: PropTypes.string,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport Select from '@mui/material/Select';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Link from '@mui/material/Link';\r\nimport Button from '@mui/material/Button';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Divider from '@mui/material/Divider';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\nimport { useState, useCallback } from 'react';\r\n// utils\r\nimport { fCurrency } from 'src/utils/format-number';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\nimport { INVOICES_STATUS_OPTIONS } from 'src/_mock';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableRow({\r\n  row,\r\n  selected,\r\n  onSelectRow,\r\n  onViewRow,\r\n  onDeleteRow,\r\n}) {\r\n  const { invoiceNumber,EmpID, from, to, startDate, endDate, Status, invoiceTo, subTotal } = row;\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const popover = usePopover();\r\n  const [currentStatus, setCurrentStatus] = useState(Status);\r\n  const handleChangeStatus = useCallback((event) => {\r\n    setCurrentStatus(event.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover selected={selected}>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox checked={selected} onClick={onSelectRow} />\r\n        </TableCell>\r\n\r\n        <TableCell sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar alt={invoiceTo.name} sx={{ mr: 2 }}>\r\n            {invoiceTo.name.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n\r\n          <ListItemText\r\n            disableTypography\r\n            primary={\r\n              <Typography variant=\"body2\" noWrap>\r\n                {invoiceTo.name}\r\n              </Typography>\r\n            }\r\n            secondary={\r\n              <Link\r\n                noWrap\r\n                variant=\"body2\"\r\n                onClick={onViewRow}\r\n                sx={{ color: 'text.disabled', cursor: 'pointer' }}\r\n              >\r\n                {invoiceNumber}\r\n              </Link>\r\n            }\r\n          />\r\n        </TableCell>\r\n        <TableCell>{EmpID}</TableCell>\r\n        <TableCell>{from}</TableCell>\r\n        <TableCell>{to}</TableCell>\r\n        <TableCell>{startDate}</TableCell>\r\n        <TableCell>{endDate}</TableCell>\r\n        <TableCell>{fCurrency(subTotal)}</TableCell>\r\n\r\n      \r\n\r\n        <TableCell >\r\n          <FormControl sx={{ minWidth: 120 }}>\r\n            <Select\r\n              value={currentStatus}\r\n              onChange={handleChangeStatus}\r\n              displayEmpty\r\n              inputProps={{ 'aria-label': 'Select Status' }}\r\n            >\r\n              {INVOICES_STATUS_OPTIONS.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </TableCell>\r\n\r\n\r\n        <TableCell align=\"right\" sx={{ px: 1 }}>\r\n          <IconButton color={popover.open ? 'inherit' : 'default'} onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 160 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            onViewRow();\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:eye-bold\" />\r\n          View\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            confirm.onTrue();\r\n            popover.onClose();\r\n          }}\r\n          sx={{ color: 'error.main' }}\r\n        >\r\n          <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n          Delete\r\n        </MenuItem>\r\n      </CustomPopover>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content=\"Are you sure want to delete?\"\r\n        action={\r\n          <Button variant=\"contained\" color=\"error\" onClick={onDeleteRow}>\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableRow.propTypes = {\r\n  onDeleteRow: PropTypes.func,\r\n  // onEditRow: PropTypes.func,\r\n  onSelectRow: PropTypes.func,\r\n  onViewRow: PropTypes.func,\r\n  row: PropTypes.object,\r\n  selected: PropTypes.bool,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\n// @mui\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select from '@mui/material/Select';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport CustomPopover, { usePopover } from 'src/components/custom-popover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableToolbar({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  dateError,\r\n  serviceOptions,\r\n}) {\r\n  const popover = usePopover();\r\n\r\n  const handleFilterName = useCallback(\r\n    (event) => {\r\n      onFilters('name', event.target.value);\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  const handleFilterService = useCallback(\r\n    (event) => {\r\n      onFilters(\r\n        'service',\r\n        typeof event.target.value === 'string' ? event.target.value.split(',') : event.target.value\r\n      );\r\n    },\r\n    [onFilters]\r\n  );\r\n\r\n  // const handleFilterStartDate = useCallback(\r\n  //   (newValue) => {\r\n  //     onFilters('startDate', newValue);\r\n  //   },\r\n  //   [onFilters]\r\n  // );\r\n\r\n  // const handleFilterEndDate = useCallback(\r\n  //   (newValue) => {\r\n  //     onFilters('endDate', newValue);\r\n  //   },\r\n  //   [onFilters]\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <Stack\r\n        spacing={2}\r\n        alignItems={{ xs: 'flex-end', md: 'center' }}\r\n        direction={{\r\n          xs: 'column',\r\n          md: 'row',\r\n        }}\r\n        sx={{\r\n          p: 2.5,\r\n          pr: { xs: 2.5, md: 1 },\r\n        }}\r\n      >\r\n        <FormControl\r\n          sx={{\r\n            flexShrink: 0,\r\n            width: { xs: 1, md: 180 },\r\n          }}\r\n        >\r\n          <InputLabel>Roles</InputLabel>\r\n\r\n          <Select\r\n            multiple\r\n            value={filters.service}\r\n            onChange={handleFilterService}\r\n            input={<OutlinedInput label=\"Service\" />}\r\n            renderValue={(selected) => selected.map((value) => value).join(', ')}\r\n            sx={{ textTransform: 'capitalize' }}\r\n          >\r\n            {serviceOptions.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                <Checkbox disableRipple size=\"small\" checked={filters.service.includes(option)} />\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* <DatePicker\r\n          label=\"Start date\"\r\n          value={filters.startDate}\r\n          onChange={handleFilterStartDate}\r\n          slotProps={{ textField: { fullWidth: true } }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        /> */}\r\n\r\n        {/* <DatePicker\r\n          label=\"End date\"\r\n          value={filters.endDate}\r\n          onChange={handleFilterEndDate}\r\n          slotProps={{\r\n            textField: {\r\n              fullWidth: true,\r\n              error: dateError,\r\n            },\r\n          }}\r\n          sx={{\r\n            maxWidth: { md: 180 },\r\n          }}\r\n        /> */}\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} flexGrow={1} sx={{ width: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            value={filters.name}\r\n            onChange={handleFilterName}\r\n            placeholder=\"Search customer or invoice number...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          <IconButton onClick={popover.onOpen}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <CustomPopover\r\n        open={popover.open}\r\n        onClose={popover.onClose}\r\n        arrow=\"right-top\"\r\n        sx={{ width: 140 }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n          Print\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:import-bold\" />\r\n          Import\r\n        </MenuItem>\r\n\r\n        <MenuItem\r\n          onClick={() => {\r\n            popover.onClose();\r\n          }}\r\n        >\r\n          <Iconify icon=\"solar:export-bold\" />\r\n          Export\r\n        </MenuItem>\r\n      </CustomPopover>\r\n    </>\r\n  );\r\n}\r\n\r\nInvoiceTableToolbar.propTypes = {\r\n  dateError: PropTypes.bool,\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  serviceOptions: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Box from '@mui/material/Box';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n// components\r\nimport Iconify from 'src/components/iconify';\r\nimport { shortDateLabel } from 'src/components/custom-date-range-picker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function InvoiceTableFiltersResult({\r\n  filters,\r\n  onFilters,\r\n  //\r\n  onResetFilters,\r\n  //\r\n  results,\r\n  ...other\r\n}) {\r\n  const shortLabel = shortDateLabel(filters.startDate, filters.endDate);\r\n\r\n  const handleRemoveService = (inputValue) => {\r\n    const newValue = filters.service.filter((item) => item !== inputValue);\r\n    onFilters('service', newValue);\r\n  };\r\n\r\n  const handleRemoveStatus = () => {\r\n    onFilters('Status', 'all');\r\n  };\r\n\r\n  const handleRemoveDate = () => {\r\n    onFilters('startDate', null);\r\n    onFilters('endDate', null);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={1.5} {...other}>\r\n      <Box sx={{ typography: 'body2' }}>\r\n        <strong>{results}</strong>\r\n        <Box component=\"span\" sx={{ color: 'text.secondary', ml: 0.25 }}>\r\n          results found\r\n        </Box>\r\n      </Box>\r\n\r\n      <Stack flexGrow={1} spacing={1} direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\r\n        {!!filters.service.length && (\r\n          <Block label=\"Service:\">\r\n            {filters.service.map((item) => (\r\n              <Chip\r\n                key={item}\r\n                label={item}\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveService(item)}\r\n              />\r\n            ))}\r\n          </Block>\r\n        )}\r\n\r\n        {filters.Status !== 'all' && (\r\n          <Block label=\"Status:\">\r\n            <Chip size=\"small\" label={filters.Status} onDelete={handleRemoveStatus} />\r\n          </Block>\r\n        )}\r\n\r\n        {filters.startDate && filters.endDate && (\r\n          <Block label=\"Date:\">\r\n            <Chip size=\"small\" label={shortLabel} onDelete={handleRemoveDate} />\r\n          </Block>\r\n        )}\r\n\r\n        <Button\r\n          color=\"error\"\r\n          onClick={onResetFilters}\r\n          startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nInvoiceTableFiltersResult.propTypes = {\r\n  filters: PropTypes.object,\r\n  onFilters: PropTypes.func,\r\n  onResetFilters: PropTypes.func,\r\n  results: PropTypes.number,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Block({ label, children, sx, ...other }) {\r\n  return (\r\n    <Stack\r\n      component={Paper}\r\n      variant=\"outlined\"\r\n      spacing={1}\r\n      direction=\"row\"\r\n      sx={{\r\n        p: 1,\r\n        borderRadius: 1,\r\n        overflow: 'hidden',\r\n        borderStyle: 'dashed',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Box component=\"span\" sx={{ typography: 'subtitle2' }}>\r\n        {label}\r\n      </Box>\r\n\r\n      <Stack spacing={1} direction=\"row\" flexWrap=\"wrap\">\r\n        {children}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nBlock.propTypes = {\r\n  children: PropTypes.node,\r\n  label: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import sumBy from 'lodash/sumBy';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport { useTheme, alpha } from '@mui/material/styles';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// hooks\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// utils\r\nimport { fTimestamp } from 'src/utils/format-time';\r\n// _mock\r\nimport { _invoices ,INVOICE_SERVICE_OPTIONS } from 'src/_mock';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\nimport InvoiceAnalytic from './invoice-analytic';\r\nimport InvoiceTableRow from './invoice-table-row';\r\nimport InvoiceTableToolbar from './invoice-table-toolbar';\r\nimport InvoiceTableFiltersResult from './invoice-table-filters-result';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'invoiceNumber', label: 'Employee' },\r\n  { id: 'EmpID', label: 'Emp ID' },\r\n  { id: 'from', label: 'From', width: 50 },\r\n  { id: 'to', label: 'To', width: 50 },\r\n  { id: 'startDate', label: 'StartDate' },\r\n  { id: 'EndDate', label: 'endDate' },\r\n  { id: 'price', label: 'Amount' },\r\n  // { id: 'sent', label: 'Sent', align: 'center' },\r\n  { id: 'Status', label: 'Status' },\r\n  { id: '' },\r\n];\r\n\r\nconst defaultFilters = {\r\n  name: '',\r\n  service: [],\r\n  Status: 'all',\r\n  startDate: null,\r\n  endDate: null,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SevenView() {\r\n  const theme = useTheme();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const table = useTable({ defaultOrderBy: 'startDate' });\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_invoices);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dateError =\r\n    filters.startDate && filters.endDate\r\n      ? filters.startDate.getTime() > filters.endDate.getTime()\r\n      : false;\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n    dateError,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 56 : 76;\r\n\r\n  const canReset =\r\n    !!filters.name ||\r\n    !!filters.service.length ||\r\n    filters.Status !== 'all' ||\r\n    (!!filters.startDate && !!filters.endDate);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const getInvoiceLength = (Status) => tableData.filter((item) => item.Status === Status).length;\r\n\r\n  const getTotalAmount = (Status) =>\r\n    sumBy(\r\n      tableData.filter((item) => item.Status === Status),\r\n      'totalAmount'\r\n    );\r\n\r\n  const getPercentByStatus = (Status) => (getInvoiceLength(Status) / tableData.length) * 100;\r\n\r\n  const TABS = [\r\n    { value: 'all', label: 'All', color: 'default', count: tableData.length },\r\n    {\r\n      value: 'paid',\r\n      label: 'Paid',\r\n      color: 'success',\r\n      count: getInvoiceLength('paid'),\r\n    },\r\n     {\r\n      value: 'approve',\r\n      label: 'Approve',\r\n      color: 'success',\r\n      count: getInvoiceLength('approve'),\r\n    },\r\n    {\r\n      value: 'pending',\r\n      label: 'Pending',\r\n      color: 'warning',\r\n      count: getInvoiceLength('pending'),\r\n    },\r\n    {\r\n      value: 'reject',\r\n      label: 'Reject',\r\n      color: 'error',\r\n      count: getInvoiceLength('reject'),\r\n    },\r\n   \r\n  ];\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n\r\n\r\n  const handleViewRow = useCallback(\r\n    (id) => {\r\n      router.push(paths.dashboard.users.eight(id));\r\n    },\r\n    [router]\r\n  );\r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('Status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\" Reimbursement List\"\r\n          links={[\r\n           \r\n            \r\n            {\r\n              name: 'Invoice List',\r\n            },\r\n          ]}\r\n          \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n\r\n        <Card\r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        >\r\n          <Scrollbar>\r\n            <Stack\r\n              direction=\"row\"\r\n              divider={<Divider orientation=\"vertical\" flexItem sx={{ borderStyle: 'dashed' }} />}\r\n              sx={{ py: 2 }}\r\n            >\r\n              <InvoiceAnalytic\r\n                title=\"Total\"\r\n                total={tableData.length}\r\n                percent={100}\r\n                price={sumBy(tableData, 'subTotal')}\r\n                icon=\"solar:bill-list-bold-duotone\"\r\n                color={theme.palette.info.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title=\"Paid\"\r\n                total={getInvoiceLength('paid')}\r\n                percent={getPercentByStatus('paid')}\r\n                price={getTotalAmount('paid')}\r\n                icon=\"solar:file-check-bold-duotone\"\r\n                color={theme.palette.success.main}\r\n              />\r\n              <InvoiceAnalytic\r\n                title=\"Approve\"\r\n                total={getInvoiceLength('approve')}\r\n                percent={getPercentByStatus('approve')}\r\n                price={getTotalAmount('approve')}\r\n                icon=\"solar:file-corrupted-bold-duotone\"\r\n                color={theme.palette.success.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title=\"Pending\"\r\n                total={getInvoiceLength('pending')}\r\n                percent={getPercentByStatus('pending')}\r\n                price={getTotalAmount('pending')}\r\n                icon=\"solar:sort-by-time-bold-duotone\"\r\n                color={theme.palette.warning.main}\r\n              />\r\n\r\n              <InvoiceAnalytic\r\n                title=\"Reject\"\r\n                total={getInvoiceLength('reject')}\r\n                percent={getPercentByStatus('reject')}\r\n                price={getTotalAmount('reject')}\r\n                icon=\"solar:bell-bing-bold-duotone\"\r\n                color={theme.palette.error.main}\r\n              />\r\n\r\n              \r\n            </Stack>\r\n          </Scrollbar>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Tabs\r\n            value={filters.Status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {TABS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                value={tab.value}\r\n                label={tab.label}\r\n                iconPosition=\"end\"\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === 'all' || tab.value === filters.Status) && 'filled') || 'soft'\r\n                    }\r\n                    color={tab.color}\r\n                  >\r\n                    {tab.count}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n\r\n          <InvoiceTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            dateError={dateError}\r\n            serviceOptions={INVOICE_SERVICE_OPTIONS.map((option) => option.name)}\r\n          />\r\n\r\n          {canReset && (\r\n            <InvoiceTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Stack direction=\"row\">\r\n                  <Tooltip title=\"Sent\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"iconamoon:send-fill\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Download\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"eva:download-outline\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Print\">\r\n                    <IconButton color=\"primary\">\r\n                      <Iconify icon=\"solar:printer-minimalistic-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                      <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Stack>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 800 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <InvoiceTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onViewRow={() => handleViewRow(row.id)}\r\n                        // onEditRow={() => handleEditRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters, dateError }) {\r\n  const { name, Status, service, startDate, endDate } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (name) {\r\n    inputData = inputData.filter(\r\n      (invoice) =>\r\n        invoice.invoiceNumber.toLowerCase().indexOf(name.toLowerCase()) !== -1 ||\r\n        invoice.invoiceTo.name.toLowerCase().indexOf(name.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (Status !== 'all') {\r\n    inputData = inputData.filter((invoice) => invoice.Status === Status);\r\n  }\r\n\r\n  if (service.length) {\r\n    inputData = inputData.filter((invoice) =>\r\n      invoice.items.some((filterItem) => service.includes(filterItem.service))\r\n    );\r\n  }\r\n\r\n  if (!dateError) {\r\n    if (startDate && endDate) {\r\n      inputData = inputData.filter(\r\n        (invoice) =>\r\n          fTimestamp(invoice.startDateDate) >= fTimestamp(startDate) &&\r\n          fTimestamp(invoice.endDate) <= fTimestamp(endDate)\r\n      );\r\n    }\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import isEqual from 'lodash/isEqual';\r\nimport { useState, useCallback } from 'react';\r\n// @mui\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Tab from '@mui/material/Tab';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Card from '@mui/material/Card';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport TableContainer from '@mui/material/TableContainer';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\nimport { useRouter } from 'src/routes/hooks';\r\nimport { RouterLink } from 'src/routes/components';\r\n// _mock\r\nimport { _EmpList,_invoices,_role ,USER_STATUS_OPTIONS } from 'src/_mock';\r\nimport { useBoolean } from 'src/hooks/use-boolean';\r\n// components\r\nimport Label from 'src/components/label';\r\nimport Iconify from 'src/components/iconify';\r\nimport Scrollbar from 'src/components/scrollbar';\r\nimport { ConfirmDialog } from 'src/components/custom-dialog';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\nimport {\r\n  useTable,\r\n  getComparator,\r\n  emptyRows,\r\n  TableNoData,\r\n  TableEmptyRows,\r\n  TableHeadCustom,\r\n  TableSelectedAction,\r\n  TablePaginationCustom,\r\n} from 'src/components/table';\r\n//\r\nimport UserTableRow from './user-table-row';\r\nimport UserTableToolbar from './user-table-toolbar';\r\nimport UserTableFiltersResult from './user-table-filters-result';\r\nimport AnalyticsWidgetSummary from './analytics-widget-summary';\r\nimport SevenView from './Reimburse_View ';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS_OPTIONS = [{ value: 'all', label: 'All' }, ...USER_STATUS_OPTIONS];\r\n\r\nconst TABLE_HEAD = [\r\n  \r\n  { id: 'EmpID', label: ' EmpID', width: 50 },\r\n  { id: 'EmpName', label: 'EmpName', width:50 },\r\n  { id: 'role', label: 'Roles', width: 50 },\r\n  { id: 'department', label: 'Department', width: 50 }, \r\n  { id: 'projectTitle', label: 'ProjectTitle', width: 50 }, \r\n  { id: 'from', label: 'From', width: 50 },\r\n  { id: 'to', label: 'To', width: 50 },\r\n  { id: 'startDate', label: 'Startdate', width: 50 },\r\n  { id: 'endDate', label: 'Enddate', width: 50 },\r\n  { id: 'purpose', label: 'Purpose', width:50 },\r\n  { id: 'accommodation', label: 'Accommodation', width: 50 },\r\n  { id: 'transportation', label: 'Transportation', width: 50 },\r\n  { id: 'foodNeeded', label: 'FoodNeeded', width: 50 },\r\n  { id: 'foodOption', label: 'FoodOptions', width: 50 },\r\n  { id: 'status', label: 'Status', width: 50 },\r\n  { id: '', width: 88 },\r\n];\r\n\r\nconst defaultFilters = {\r\n  EmpName: '',\r\n  role: [],\r\n  status: 'all',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FourView() {\r\n  const table = useTable();\r\n\r\n  const settings = useSettingsContext();\r\n\r\n  const router = useRouter();\r\n\r\n  const confirm = useBoolean();\r\n\r\n  const [tableData, setTableData] = useState(_EmpList);\r\n\r\n  const [filters, setFilters] = useState(defaultFilters);\r\n\r\n  const dataFiltered = applyFilter({\r\n    inputData: tableData,\r\n    comparator: getComparator(table.order, table.orderBy),\r\n    filters,\r\n  });\r\n\r\n  const dataInPage = dataFiltered.slice(\r\n    table.page * table.rowsPerPage,\r\n    table.page * table.rowsPerPage + table.rowsPerPage\r\n  );\r\n\r\n  const denseHeight = table.dense ? 52 : 72;\r\n\r\n  const canReset = !isEqual(defaultFilters, filters);\r\n\r\n  const notFound = (!dataFiltered.length && canReset) || !dataFiltered.length;\r\n\r\n  const handleFilters = useCallback(\r\n    (name, value) => {\r\n      table.onResetPage();\r\n      setFilters((prevState) => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    },\r\n    [table]\r\n  );\r\n\r\n  const handleDeleteRow = useCallback(\r\n    (id) => {\r\n      const deleteRow = tableData.filter((row) => row.id !== id);\r\n      setTableData(deleteRow);\r\n\r\n      table.onUpdatePageDeleteRow(dataInPage.length);\r\n    },\r\n    [dataInPage.length, table, tableData]\r\n  );\r\n\r\n  const handleDeleteRows = useCallback(() => {\r\n    const deleteRows = tableData.filter((row) => !table.selected.includes(row.id));\r\n    setTableData(deleteRows);\r\n\r\n    table.onUpdatePageDeleteRows({\r\n      totalRows: tableData.length,\r\n      totalRowsInPage: dataInPage.length,\r\n      totalRowsFiltered: dataFiltered.length,\r\n    });\r\n  }, [dataFiltered.length, dataInPage.length, table, tableData]);\r\n\r\n  \r\n\r\n  const handleFilterStatus = useCallback(\r\n    (event, newValue) => {\r\n      handleFilters('status', newValue);\r\n    },\r\n    [handleFilters]\r\n  );\r\n\r\n  const handleResetFilters = useCallback(() => {\r\n    setFilters(defaultFilters);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Travel Trip List\"\r\n          links={[\r\n          // { name: 'Dashboard', href: paths.dashboard.group.root },\r\n          //  { name: 'TripList', href: paths.dashboard.group.five},\r\n           { name: 'List'},\r\n          \r\n            \r\n          ]}\r\n      \r\n          sx={{\r\n            mb: { xs: 3, md: 5 },\r\n          }}\r\n        />\r\n \r\n <Grid container spacing={3}>\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"All Status\"\r\n            total={20}\r\n            color=\"info\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Approve\"\r\n            total={6}\r\n            color=\"success\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Pending\"\r\n            total={10}\r\n            color=\"warning\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid xs={12} sm={6} md={3}>\r\n          <AnalyticsWidgetSummary\r\n            title=\"Reject\"\r\n            total={4}\r\n            color=\"error\"\r\n            icon={<img alt=\"icon\" src=\"/assets/icons/glass/ic_glass_users.png\" />}\r\n          />\r\n        </Grid>\r\n        </Grid>\r\n\r\n        <Card>\r\n        \r\n          <Tabs\r\n            value={filters.status}\r\n            onChange={handleFilterStatus}\r\n            sx={{\r\n              px: 2.5,\r\n              boxShadow: (theme) => `inset 0 -2px 0 0 ${alpha(theme.palette.grey[500], 0.08)}`,\r\n            }}\r\n          >\r\n            {STATUS_OPTIONS.map((tab) => (\r\n              <Tab\r\n                key={tab.value}\r\n                iconPosition=\"end\"\r\n                value={tab.value}\r\n                label={tab.label}\r\n                icon={\r\n                  <Label\r\n                    variant={\r\n                      ((tab.value === 'all' || tab.value === filters.status) && 'filled') || 'soft'\r\n                    }\r\n                    color={\r\n                      (tab.value === 'approve' && 'success') ||\r\n                      (tab.value === 'pending' && 'warning') ||\r\n                      (tab.value === 'reject' && 'error') ||\r\n                      'default'\r\n                    }\r\n                  >\r\n                    {tab.value === 'all' && _EmpList.length}\r\n                    \r\n                    {tab.value === 'pending' &&\r\n                      _EmpList.filter((user) => user.status === 'pending').length}\r\n                    {tab.value === 'approve' &&\r\n                      _EmpList.filter((user) => user.status === 'approve').length}\r\n                    {tab.value === 'reject' &&\r\n                      _EmpList.filter((user) => user.status === 'reject').length}\r\n                  </Label>\r\n                }\r\n              />\r\n            ))}\r\n          </Tabs>\r\n      \r\n\r\n          <UserTableToolbar\r\n            filters={filters}\r\n            onFilters={handleFilters}\r\n            //\r\n            roleOptions={_role}\r\n          />\r\n\r\n          {canReset && (\r\n            <UserTableFiltersResult\r\n              filters={filters}\r\n              onFilters={handleFilters}\r\n              //\r\n              onResetFilters={handleResetFilters}\r\n              //\r\n              results={dataFiltered.length}\r\n              sx={{ p: 2.5, pt: 0 }}\r\n            />\r\n          )}\r\n\r\n          <TableContainer sx={{ position: 'relative', overflow: 'unset' }}>\r\n            <TableSelectedAction\r\n              dense={table.dense}\r\n              numSelected={table.selected.length}\r\n              rowCount={tableData.length}\r\n              onSelectAllRows={(checked) =>\r\n                table.onSelectAllRows(\r\n                  checked,\r\n                  tableData.map((row) => row.id)\r\n                )\r\n              }\r\n              action={\r\n                <Tooltip title=\"Delete\">\r\n                  <IconButton color=\"primary\" onClick={confirm.onTrue}>\r\n                    <Iconify icon=\"solar:trash-bin-trash-bold\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              }\r\n            />\r\n\r\n            <Scrollbar>\r\n              <Table size={table.dense ? 'small' : 'medium'} sx={{ minWidth: 960 }}>\r\n                <TableHeadCustom\r\n                  order={table.order}\r\n                  orderBy={table.orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={tableData.length}\r\n                  numSelected={table.selected.length}\r\n                  onSort={table.onSort}\r\n                  onSelectAllRows={(checked) =>\r\n                    table.onSelectAllRows(\r\n                      checked,\r\n                      tableData.map((row) => row.id)\r\n                    )\r\n                  }\r\n                />\r\n\r\n                <TableBody>\r\n                  {dataFiltered\r\n                    .slice(\r\n                      table.page * table.rowsPerPage,\r\n                      table.page * table.rowsPerPage + table.rowsPerPage\r\n                    )\r\n                    .map((row) => (\r\n                      <UserTableRow\r\n                        key={row.id}\r\n                        row={row}\r\n                        selected={table.selected.includes(row.id)}\r\n                        onSelectRow={() => table.onSelectRow(row.id)}\r\n                        onDeleteRow={() => handleDeleteRow(row.id)}\r\n                        // onEditRow={() => handleEditRow(row.id)}\r\n                      />\r\n                    ))}\r\n\r\n                  <TableEmptyRows\r\n                    height={denseHeight}\r\n                    emptyRows={emptyRows(table.page, table.rowsPerPage, tableData.length)}\r\n                  />\r\n\r\n                  <TableNoData notFound={notFound} />\r\n                </TableBody>\r\n              </Table>\r\n            </Scrollbar>\r\n          </TableContainer>\r\n\r\n          <TablePaginationCustom\r\n            count={dataFiltered.length}\r\n            page={table.page}\r\n            rowsPerPage={table.rowsPerPage}\r\n            onPageChange={table.onChangePage}\r\n            onRowsPerPageChange={table.onChangeRowsPerPage}\r\n            //\r\n            dense={table.dense}\r\n            onChangeDense={table.onChangeDense}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <ConfirmDialog\r\n        open={confirm.value}\r\n        onClose={confirm.onFalse}\r\n        title=\"Delete\"\r\n        content={\r\n          <>\r\n            Are you sure want to delete <strong> {table.selected.length} </strong> items?\r\n          </>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n            onClick={() => {\r\n              handleDeleteRows();\r\n              confirm.onFalse();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      <Grid xs={12} md={6} lg={8} style={{ marginTop: '100px' }}>\r\n          <SevenView title=\"Reimbursement\" list={_invoices} />\r\n        </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter({ inputData, comparator, filters }) {\r\n  const { EmpName, status, role } = filters;\r\n\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (EmpName) {\r\n    inputData = inputData.filter(\r\n      (user) => user.EmpName.toLowerCase().indexOf(EmpName.toLowerCase()) !== -1\r\n    );\r\n  }\r\n\r\n  if (status !== 'all') {\r\n    inputData = inputData.filter((user) => user.status === status);\r\n  }\r\n\r\n  if (role.length) {\r\n    inputData = inputData.filter((user) => role.includes(user.role));\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\n// sections\r\nimport OneView from 'src/sections/one/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageOne() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard</title>\r\n      </Helmet>\r\n\r\n      <OneView />\r\n    </>\r\n  );\r\n}\r\n","import numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fCurrency(number) {\r\n  const format = number ? numeral(number).format('?0,0') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  const format = number ? numeral(Number(number) / 100).format('0.0%') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  const format = number ? numeral(number).format('0.00a') : '';\r\n\r\n  return result(format, '.00');\r\n}\r\n\r\nexport function fData(number) {\r\n  const format = number ? numeral(number).format('0.0 b') : '';\r\n\r\n  return result(format, '.0');\r\n}\r\n\r\nfunction result(format, key = '.00') {\r\n  const isInteger = format.includes(key);\r\n\r\n  return isInteger ? format.replace(key, '') : format;\r\n}\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fDateTime(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy p';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fTimestamp(date) {\r\n  return date ? getTime(new Date(date)) : '';\r\n}\r\n\r\nexport function fToNow(date) {\r\n  return date\r\n    ? formatDistanceToNow(new Date(date), {\r\n        addSuffix: true,\r\n      })\r\n    : '';\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","shortDateLabel","startDate","endDate","getCurrentYear","Date","getFullYear","startDateYear","getYear","endDateYear","currentYear","sameDay","isSameDay","sameMonth","isSameMonth","fDate","concat","ConfirmDialog","title","content","open","onClose","Dialog","fullWidth","maxWidth","DialogTitle","pb","DialogContent","DialogActions","Button","onClick","emptyRows","page","rowsPerPage","arrayLength","Math","max","descendingComparator","a","b","orderBy","getComparator","order","useTable","props","dense","setDense","useState","defaultDense","setPage","defaultCurrentPage","setOrderBy","defaultOrderBy","setRowsPerPage","defaultRowsPerPage","setOrder","defaultOrder","selected","setSelected","defaultSelected","onSort","useCallback","id","onSelectRow","inputValue","newSelected","includes","filter","value","onChangeRowsPerPage","event","parseInt","onChangeDense","checked","onSelectAllRows","onChangePage","newPage","onResetPage","onUpdatePageDeleteRow","totalRowsInPage","onUpdatePageDeleteRows","totalRows","totalRowsFiltered","totalSelected","ceil","EmptyContent","imgUrl","filled","description","justifyContent","px","theme","alpha","palette","grey","border","alt","src","textAlign","TableNoData","notFound","TableRow","TableCell","colSpan","py","p","TableEmptyRows","visuallyHidden","margin","padding","overflow","position","whiteSpace","clip","TableHeadCustom","rowCount","headLabel","numSelected","TableHead","Checkbox","indeterminate","onChange","headCell","align","sortDirection","minWidth","TableSortLabel","hideSortIcon","active","label","TableSelectedAction","pl","pr","top","left","zIndex","ml","TablePaginationCustom","rowsPerPageOptions","TablePagination","borderTopColor","UserTableRow","row","onDeleteRow","EmpName","EmpID","role","department","projectTitle","from","to","purpose","accommodation","transportation","FoodNeededs","foodOption","status","avatarUrl","confirm","useBoolean","popover","usePopover","currentStatus","setCurrentStatus","handleChangeStatus","hover","Avatar","ListItemText","primary","primaryTypographyProps","secondaryTypographyProps","FormControl","Select","displayEmpty","inputProps","USER_STATUS_OPTIONS","option","MenuItem","IconButton","onOpen","Iconify","CustomPopover","arrow","onTrue","onFalse","UserTableToolbar","filters","onFilters","roleOptions","handleFilterName","handleFilterRole","split","spacing","xs","md","InputLabel","multiple","input","OutlinedInput","renderValue","join","MenuProps","PaperProps","maxHeight","disableRipple","size","TextField","placeholder","InputProps","startAdornment","InputAdornment","UserTableFiltersResult","onResetFilters","results","flexWrap","Block","Chip","onDelete","handleRemoveStatus","item","newValue","handleRemoveRole","startIcon","_ref2","Paper","borderStyle","AnalyticsWidgetSummary","total","useTheme","bgGradient","startColor","light","endColor","main","backgroundColor","mb","fShortenNumber","opacity","InvoiceAnalytic","percent","price","CircularProgress","thickness","fCurrency","InvoiceTableRow","onViewRow","invoiceNumber","Status","invoiceTo","subTotal","charAt","toUpperCase","disableTypography","noWrap","secondary","INVOICES_STATUS_OPTIONS","Divider","InvoiceTableToolbar","dateError","serviceOptions","handleFilterService","service","textTransform","InvoiceTableFiltersResult","shortLabel","handleRemoveService","handleRemoveDate","TABLE_HEAD","defaultFilters","SevenView","settings","useSettingsContext","router","useRouter","table","tableData","setTableData","_invoices","setFilters","getTime","dataFiltered","inputData","comparator","stabilizedThis","el","index","sort","invoice","toLowerCase","indexOf","items","some","filterItem","fTimestamp","startDateDate","applyFilter","dataInPage","slice","denseHeight","canReset","getInvoiceLength","getTotalAmount","sumBy","getPercentByStatus","TABS","count","handleFilters","prevState","handleDeleteRow","deleteRow","handleDeleteRows","deleteRows","handleViewRow","push","paths","dashboard","users","eight","handleFilterStatus","handleResetFilters","Container","themeStretch","Card","Scrollbar","divider","orientation","flexItem","info","success","warning","error","Tabs","boxShadow","tab","Tab","iconPosition","Label","INVOICE_SERVICE_OPTIONS","pt","TableContainer","Tooltip","Table","TableBody","onPageChange","onRowsPerPageChange","STATUS_OPTIONS","FourView","_EmpList","user","isEqual","Grid","container","sm","_role","lg","style","marginTop","list","PageOne","Helmet","OneView","number","result","numeral","format","fData","key","arguments","undefined","replace","date","newFormat","fm"],"sourceRoot":""}