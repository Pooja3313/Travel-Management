{"version":3,"file":"static/js/965.1eaba5b7.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.js","components/custom-breadcrumbs/custom-breadcrumbs.js","sections/nine/invoice-new-edit-details.js","sections/nine/invoice-new-edit-address.js","sections/nine/invoice-new-edit-status-date.js","sections/nine/invoice-new-edit-form.js","sections/nine/view.js","pages/dashboard/nine.js","sections/address/address-list-dialog.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n\n// ----------------------------------------------------------------------\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n\nBreadcrumbsLink.propTypes = {\n  activeLast: PropTypes.bool,\n  disabled: PropTypes.bool,\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.node,\n    name: PropTypes.string,\n  }),\n};\n","import PropTypes from 'prop-types';\n// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nCustomBreadcrumbs.propTypes = {\n  sx: PropTypes.object,\n  action: PropTypes.node,\n  links: PropTypes.array,\n  heading: PropTypes.string,\n  moreLink: PropTypes.array,\n  activeLast: PropTypes.bool,\n};\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","import sum from 'lodash/sum';\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\nimport { useFormContext, useFieldArray } from 'react-hook-form';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport { inputBaseClasses } from '@mui/material/InputBase';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport InputLabel from '@mui/material/InputLabel';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\n// utils\nimport { fCurrency } from 'src/utils/format-number';\n// _mock\nimport { INVOICE_SERVICE_OPTIONS, coverUrl } from 'src/_mock';\n\n// components\nimport Iconify from 'src/components/iconify';\nimport { RHFSelect, RHFTextField, RHFUpload } from 'src/components/hook-form';\nimport { Upload } from 'src/components/upload';\n\n// ----------------------------------------------------------------------\n\n\n\n\nexport default function InvoiceNewEditDetails() {\n  const { control, setValue, resetField, getValues, watch } = useFormContext();\n  const [files, setFiles] = useState([]);\n  const values = watch();\n\n  const totalOnRow = values.items.map((item) => item.quantity * item.price);\n\n  const subTotal = sum(totalOnRow);\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'items',\n  });\n\n  const handleAdd = () => {\n    append({\n      title: '',\n      service: '',\n      coverUrl: '',\n      quantity: 1,\n      price: 0,\n      total: 0,\n    });\n  };\n\n  const handleRemove = (index) => {\n    remove(index);\n  };\n\n  const handleRemoveFile = useCallback(\n    (index) => {\n      setValue(`items[${index}].coverUrl`, null, { shouldValidate: true });\n      // Optionally, update the state to remove the image from the UI\n    },\n    [setValue]\n  );\n\n  const handleDrop = useCallback(\n    (acceptedFiles, index) => {\n      const file = acceptedFiles[0];\n\n      // Check if a file is present\n      if (file) {\n        try {\n          const newFile = Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          });\n\n          setValue(`items[${index}].coverUrl`, newFile, { shouldValidate: true });\n          // Update UI to display uploaded image preview\n        } catch (error) {\n          console.error('Error creating object URL:', error);\n        }\n      }\n    },\n    [setValue]\n  );\n  const handleDropMultiFile = useCallback(\n    (acceptedFiles) => {\n      const selectedFile = acceptedFiles[0]; // Select the first file only\n      if (selectedFile) {\n        try {\n          const newFile = Object.assign(selectedFile, {\n            preview: URL.createObjectURL(selectedFile),\n          });\n          setFiles([newFile]); // Set the state with the single selected file\n        } catch (error) {\n          console.error('Error creating object URL:', error);\n        }\n      }\n    },\n    [] // No dependencies needed for this function\n  );\n  const handleRemoveFiles = (inputFile) => {\n    const filesFiltered = files.filter((fileFiltered) => fileFiltered !== inputFile);\n    setFiles(filesFiltered);\n  };\n  \n\n  \n  // const handleRemoveFiles = useCallback(() => {\n  //   setValue('coverUrl', null, { shouldValidate: true });\n  //   // Optionally, update the state to remove the image from the UI\n  // }, [setValue]);\n  \n  // const handleDrops = useCallback(\n  //   (acceptedFiles) => {\n  //     const file = acceptedFiles[0];\n  \n  //     // Check if a file is present\n  //     if (file) {\n  //       try {\n  //         const newFile = Object.assign(file, {\n  //           preview: URL.createObjectURL(file),\n  //         });\n  \n  //         setValue('coverUrl', newFile, { shouldValidate: true });\n  //         // Update UI to display uploaded image preview\n  //       } catch (error) {\n  //         console.error('Error creating object URL:', error);\n  //       }\n  //     }\n  //   },\n  //   [setValue]\n  // );\n  \n  const handleClearService = useCallback(\n    (index) => {\n      resetField(`items[${index}].quantity`);\n      resetField(`items[${index}].price`);\n      resetField(`items[${index}].total`);\n    },\n    [resetField]\n  );\n\n  // const handleSelectService = useCallback(\n  //   (index, option) => {\n  //     setValue(\n  //       `items[${index}].price`,\n  //       INVOICE_SERVICE_OPTIONS.find((service) => service.name === option)?.price\n  //     );\n  //     setValue(\n  //       `items[${index}].total`,\n  //       values.items.map((item) => item.quantity * item.price)[index]\n  //     );\n  //   },\n  //   [setValue, values.items]\n  // );\n\n  const handleChangeQuantity = useCallback(\n    (event, index) => {\n      setValue(`items[${index}].quantity`, Number(event.target.value));\n      setValue(\n        `items[${index}].total`,\n        values.items.map((item) => item.quantity * item.price)[index]\n      );\n    },\n    [setValue, values.items]\n  );\n\n  const handleChangePrice = useCallback(\n    (event, index) => {\n      setValue(`items[${index}].price`, Number(event.target.value));\n      setValue(\n        `items[${index}].total`,\n        values.items.map((item) => item.quantity * item.price)[index]\n      );\n    },\n    [setValue, values.items]\n  );\n\n  const handleSelectService = useCallback(\n    (index, option) => {\n      const selectedService = INVOICE_SERVICE_OPTIONS.find((service) => service.name === option);\n      if (selectedService) {\n        // Update the service name only if a valid service is selected\n        setValue(`items[${index}].service`, selectedService.name);\n      }\n      // No changes to price and total\n    },\n    [setValue]\n  );\n\n  const renderTotal = (\n    <Stack\n      spacing={2}\n      alignItems=\"flex-end\"\n      sx={{ mt: 3, textAlign: 'right', typography: 'body2' }}\n    >\n      <Stack direction=\"row\">\n        <Box sx={{ color: 'text.secondary' }}>Subtotal</Box>\n        <Box sx={{ width: 160, typography: 'subtitle2' }}>&#8377;{fCurrency(subTotal) || '-'}</Box>\n      </Stack>\n    </Stack>\n  );\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\n        Details:\n      </Typography>\n\n      <Stack divider={<Divider flexItem sx={{ borderStyle: 'dashed' }} />} spacing={3}>\n        {fields.map((item, index) => (\n          <Stack key={item.id} alignItems=\"flex-end\" spacing={1.5}>\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ width: 1 }}>\n              <RHFTextField\n                size=\"small\"\n                name={`items[${index}].title`}\n                label=\"Title\"\n                InputLabelProps={{ shrink: true }}\n                sx={{ maxWidth: { md: 350 } }}\n              />\n              <RHFUpload\n                name={`items[${index}].coverUrl`}\n                maxSize={3145728}\n                // size=\"small\"\n                onDrop={(acceptedFiles) => handleDrop(acceptedFiles, index)} // Pass index as an argument\n                onDelete={() => handleRemoveFile(index)}\n                InputLabelProps={{ shrink: true }}\n              />\n              <RHFSelect\n                name={`items[${index}].service`}\n                size=\"small\"\n                label=\"Role\"\n                InputLabelProps={{ shrink: true }}\n                sx={{\n                  maxWidth: { md: 160 },\n                }}\n              >\n                <MenuItem\n                  value=\"\"\n                  onClick={() => handleClearService(index)}\n                  sx={{ fontStyle: 'italic', color: 'text.secondary' }}\n                >\n                  None\n                </MenuItem>\n\n                <Divider sx={{ borderStyle: 'dashed' }} />\n\n                {INVOICE_SERVICE_OPTIONS.map((service) => (\n                  <MenuItem\n                    key={service.id}\n                    value={service.name}\n                    onClick={() => handleSelectService(index, service.name)}\n                  >\n                    {service.name}\n                  </MenuItem>\n                ))}\n              </RHFSelect>\n              <RHFTextField\n                size=\"small\"\n                type=\"number\"\n                name={`items[${index}].quantity`}\n                label=\"Quantity\"\n                placeholder=\"0\"\n                onChange={(event) => handleChangeQuantity(event, index)}\n                InputLabelProps={{ shrink: true }}\n                sx={{ maxWidth: { md: 96 } }}\n              />\n\n              <RHFTextField\n                size=\"small\"\n                type=\"number\"\n                name={`items[${index}].price`}\n                label=\"Price\"\n                placeholder=\"0.00\"\n                onChange={(event) => handleChangePrice(event, index)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>&#8377;</Box>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{ maxWidth: { md: 96 } }}\n              />\n\n              <RHFTextField\n                disabled\n                size=\"small\"\n                type=\"number\"\n                name={`items[${index}].total`}\n                label=\"Total\"\n                placeholder=\"0.00\"\n                value={values.items[index].total === 0 ? '' : values.items[index].total.toFixed(2)}\n                onChange={(event) => handleChangePrice(event, index)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Box sx={{ typography: 'subtitle2', color: 'text.disabled' }}>&#8377;</Box>\n                    </InputAdornment>\n                  ),\n                }}\n                sx={{\n                  maxWidth: { md: 104 },\n                  [`& .${inputBaseClasses.input}`]: {\n                    textAlign: { md: 'right' },\n                  },\n                }}\n              />\n            </Stack>\n\n            <Button\n              size=\"small\"\n              color=\"error\"\n              startIcon={<Iconify icon=\"solar:trash-bin-trash-bold\" />}\n              onClick={() => handleRemove(index)}\n            >\n              Remove\n            </Button>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Divider sx={{ my: 3, borderStyle: 'dashed' }} />\n\n      <Stack\n        spacing={3}\n        direction={{ xs: 'column', md: 'row' }}\n        alignItems={{ xs: 'flex-end', md: 'center' }}\n      >\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          startIcon={<Iconify icon=\"mingcute:add-line\" />}\n          onClick={handleAdd}\n          sx={{ flexShrink: 0 }}\n        >\n          Add Item\n        </Button>\n      </Stack>\n      <h4>Report</h4>\n\n      {/* <RHFUpload\n        name=\"coverUrl\"\n        maxSize={3145728}\n        // size=\"small\"\n        onDrop={(acceptedFiles) => handleDrops(acceptedFiles)} // Pass index as an argument\n        onDelete={() => handleRemoveFiles()} // Pass index as an argument\n        InputLabelProps={{ shrink: true }}\n      /> */}\n        <Card>\n        <CardHeader\n          title=\"Upload Report\"\n        />\n        <CardContent>\n          <Upload\n            multiple\n            name=\"UploadFile\"\n            files={files}\n            onDrop={handleDropMultiFile}\n            onRemove={handleRemoveFiles}\n           \n            // onUpload={() => console.info('ON UPLOAD')}\n          />\n        </CardContent>\n      </Card>\n\n      {renderTotal}\n    </Box>\n  );\n}\n","import { useFormContext } from 'react-hook-form';\n// @mui\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\nimport { useResponsive } from 'src/hooks/use-responsive';\n// _mock\nimport { _addressBooks } from 'src/_mock';\n// components\nimport Iconify from 'src/components/iconify';\n//\nimport { AddressListDialog } from '../address';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceNewEditAddress() {\n  const {\n    watch,\n    setValue,\n    formState: { errors },\n  } = useFormContext();\n\n  const upMd = useResponsive('up', 'md');\n\n  const values = watch();\n\n  const { invoiceFrom, invoiceTo } = values;\n\n  const from = useBoolean();\n\n  const to = useBoolean();\n\n  return (\n    <>\n      <Stack\n        spacing={{ xs: 3, md: 5 }}\n        direction={{ xs: 'column', md: 'row' }}\n        divider={\n          <Divider\n            flexItem\n            orientation={upMd ? 'vertical' : 'horizontal'}\n            sx={{ borderStyle: 'dashed' }}\n          />\n        }\n        sx={{ p: 3 }}\n      >\n        <Stack sx={{ width: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\n              From:\n            </Typography>\n\n            <IconButton onClick={from.onTrue}>\n              <Iconify icon=\"solar:pen-bold\" />\n            </IconButton>\n          </Stack>\n\n          <Stack spacing={1}>\n            <Typography variant=\"subtitle2\">{invoiceFrom.name}</Typography>\n            <Typography variant=\"body2\">{invoiceFrom.fullAddress}</Typography>\n            <Typography variant=\"body2\"> {invoiceFrom.phoneNumber}</Typography>\n          </Stack>\n        </Stack>\n\n        <Stack sx={{ width: 1 }}>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 1 }}>\n            <Typography variant=\"h6\" sx={{ color: 'text.disabled', flexGrow: 1 }}>\n              To:\n            </Typography>\n\n            <IconButton onClick={to.onTrue}>\n              <Iconify icon={invoiceTo ? 'solar:pen-bold' : 'mingcute:add-line'} />\n            </IconButton>\n          </Stack>\n\n          {invoiceTo ? (\n            <Stack spacing={1}>\n              <Typography variant=\"subtitle2\">{invoiceTo.name}</Typography>\n              <Typography variant=\"body2\">{invoiceTo.fullAddress}</Typography>\n              <Typography variant=\"body2\"> {invoiceTo.phoneNumber}</Typography>\n            </Stack>\n          ) : (\n            <Typography typography=\"caption\" sx={{ color: 'error.main' }}>\n              {errors.invoiceTo?.message}\n            </Typography>\n          )}\n        </Stack>\n      </Stack>\n\n      <AddressListDialog\n        title=\"Customers\"\n        open={from.value}\n        onClose={from.onFalse}\n        selected={(selectedId) => invoiceFrom?.id === selectedId}\n        onSelect={(address) => setValue('invoiceFrom', address)}\n        list={_addressBooks}\n        action={\n          <Button\n            size=\"small\"\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\n            sx={{ alignSelf: 'flex-end' }}\n          >\n            New\n          </Button>\n        }\n      />\n\n      <AddressListDialog\n        title=\"Customers\"\n        open={to.value}\n        onClose={to.onFalse}\n        selected={(selectedId) => invoiceTo?.id === selectedId}\n        onSelect={(address) => setValue('invoiceTo', address)}\n        list={_addressBooks}\n        action={\n          <Button\n            size=\"small\"\n            startIcon={<Iconify icon=\"mingcute:add-line\" />}\n            sx={{ alignSelf: 'flex-end' }}\n          >\n            New\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport Stack from '@mui/material/Stack';\nimport MenuItem from '@mui/material/MenuItem';\n// components\nimport { RHFSelect, RHFTextField } from 'src/components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceNewEditStatusDate() {\n  const { control, watch } = useFormContext();\n\n  const values = watch();\n\n  return (\n    <Stack\n      spacing={2}\n      direction={{ xs: 'column', sm: 'row' }}\n      sx={{ p: 3, bgcolor: 'background.neutral' }}\n    >\n      <RHFTextField\n        disabled\n        name=\"invoiceNumber\"\n        label=\"Invoice number\"\n        value={values.invoiceNumber}\n      />\n\n      <RHFSelect\n      \n        fullWidth\n        disabled\n        name=\"status\"\n        label=\"Status\"\n        InputLabelProps={{ shrink: true }}\n        PaperPropsSx={{ textTransform: 'capitalize' }}\n      >\n        {['paid', 'pending', 'overdue', 'draft'].map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </RHFSelect>\n      {/* <RHFTextField name=\"name\" label=\"Employee Name\" /> */}\n      <RHFTextField name=\"EmpID\" label=\"Employee ID\" />\n      <RHFTextField name=\"from\" label=\"From Destination\" />\n      <RHFTextField name=\"to\" label=\"To Destination\" />\n\n     \n\n    \n\n      <Controller\n        name=\"createDate\"\n        control={control}\n        render={({ field, fieldState: { error } }) => (\n          <DatePicker\n            label=\"Start Date\"\n            value={field.value}\n            onChange={(newValue) => {\n              field.onChange(newValue);\n            }}\n            slotProps={{\n              textField: {\n                fullWidth: true,\n                error: !!error,\n                helperText: error?.message,\n              },\n            }}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"dueDate\"\n        control={control}\n        render={({ field, fieldState: { error } }) => (\n          <DatePicker\n            label=\"End Date\"\n            value={field.value}\n            onChange={(newValue) => {\n              field.onChange(newValue);\n            }}\n            slotProps={{\n              textField: {\n                fullWidth: true,\n                error: !!error,\n                helperText: error?.message,\n              },\n            }}\n          />\n        )}\n      />\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { useRouter } from 'src/routes/hooks';\n// _mock\nimport { _addressBooks } from 'src/_mock';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// components\nimport FormProvider from 'src/components/hook-form';\nimport { useSnackbar } from 'src/components/snackbar';\n//\nimport InvoiceNewEditDetails from './invoice-new-edit-details';\nimport InvoiceNewEditAddress from './invoice-new-edit-address';\nimport InvoiceNewEditStatusDate from './invoice-new-edit-status-date';\n\n// ----------------------------------------------------------------------\n\nexport default function InvoiceNewEditForm({ currentInvoice }) {\n  const router = useRouter();\n  // const currency = 'INR';\n  const { enqueueSnackbar } = useSnackbar();\n  const loadingSave = useBoolean();\n\n  const loadingSend = useBoolean();\n\n  const NewInvoiceSchema = Yup.object().shape({\n    invoiceTo: Yup.mixed().nullable().required('Invoice to is required'),\n    // EmpName: Yup.string().required('Name is required'),\n    EmpID: Yup.string().required('Emp_ID is required'),\n    from: Yup.string().required('Destination is required'),\n\n    to: Yup.string().required('Destination is required'),\n    // startDate: Yup.date().required('Start Date is required'),\n    // endDate: Yup.date().required('End Date is required'),\n    coverUrl: Yup.string(),\n    UploadFile: Yup.mixed().required('File is required'),\n    createDate: Yup.mixed().nullable().required('Create date is required'),\n    dueDate: Yup.mixed()\n      .required('Due date is required')\n      .test(\n        'date-min',\n        'Due date must be later than create date',\n        (value, { parent }) => value.getTime() > parent.createDate.getTime()\n      ),\n\n    // not required\n\n    // taxes: Yup.number(),\n    status: Yup.string(),\n    // discount: Yup.number(),\n    // shipping: Yup.number(),\n    invoiceFrom: Yup.mixed(),\n    // totalAmount: Yup.number(),\n    invoiceNumber: Yup.string(),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      invoiceNumber: currentInvoice?.invoiceNumber || 'INV-1990',\n      // EmpName: currentInvoice?.EmpName || '',\n      EmpID: currentInvoice?.EmpID || '',\n      from: currentInvoice?.from || '',\n      to: currentInvoice?.to || '',\n      // startDate: currentInvoice?.startDate || '',\n      // endDate: currentInvoice?.endDate || '',\n      createDate: currentInvoice?.createDate || new Date(),\n      dueDate: currentInvoice?.dueDate || null,\n      // taxes: currentInvoice?.taxes || 0,\n      // shipping: currentInvoice?.shipping || 0,\n      status: currentInvoice?.status || 'draft',\n      // discount: currentInvoice?.discount || 0,\n      invoiceFrom: currentInvoice?.invoiceFrom || _addressBooks[0],\n      invoiceTo: currentInvoice?.invoiceTo || null,\n\n      UploadFile: currentInvoice?.UploadFile || '',\n      items: currentInvoice?.items || [\n        {\n          title: '',\n          service: '',\n          coverUrl: '',\n          quantity: 1,\n          price: 0,\n          total: 0,\n          // currency,\n        },\n      ],\n      // totalAmount: currentInvoice?.totalAmount || 0,\n    }),\n    [currentInvoice]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewInvoiceSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = methods;\n  console.log('errors:', errors);\n  const handleSaveAsDraft = handleSubmit(async (data) => {\n    loadingSave.onTrue();\n\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      loadingSave.onFalse();\n      enqueueSnackbar('save the draft successfully!');\n      router.push(paths.dashboard.users.root);\n      console.info('DATA', JSON.stringify(data, null, 2));\n    } catch (error) {\n      console.error(error);\n      loadingSave.onFalse();\n    }\n  });\n\n  const handleCreateAndSend = handleSubmit(async (data) => {\n    loadingSend.onTrue();\n\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      loadingSend.onFalse();\n      enqueueSnackbar('Update success!');\n      router.push(paths.dashboard.users.root);\n      console.info('DATA', JSON.stringify(data, null, 2));\n    } catch (error) {\n      console.error(error);\n      loadingSend.onFalse();\n    }\n  });\n\n  return (\n    <FormProvider methods={methods}>\n      <Card>\n        <InvoiceNewEditAddress />\n\n        <InvoiceNewEditStatusDate />\n\n        <InvoiceNewEditDetails />\n      </Card>\n\n      <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n        <LoadingButton\n          color=\"inherit\"\n          size=\"large\"\n          variant=\"outlined\"\n          loading={loadingSave.value && isSubmitting}\n          onClick={handleSaveAsDraft}\n        >\n          Save as Draft\n        </LoadingButton>\n\n        <LoadingButton\n          size=\"large\"\n          variant=\"contained\"\n          loading={loadingSend.value && isSubmitting}\n          onClick={handleCreateAndSend}\n        >\n          {currentInvoice ? 'Update' : 'Create'} & Send\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n}\n\nInvoiceNewEditForm.propTypes = {\n  currentInvoice: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport Container from '@mui/material/Container';\r\n// routes\r\nimport { paths } from 'src/routes/paths';\r\n// _mock\r\nimport { _invoices } from 'src/_mock';\r\n// components\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\r\n//\r\nimport InvoiceNewEditForm from './invoice-new-edit-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function NineView({ id }) {\r\n  const settings = useSettingsContext();\r\n\r\n  const currentInvoice = _invoices.find((invoice) => invoice.id === id);\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'lg'}>\r\n      <CustomBreadcrumbs\r\n        heading=\"Edit\"\r\n        links={[\r\n          {\r\n            name: 'Dashboard',\r\n            href: paths.dashboard.users.root,\r\n          },\r\n          {\r\n            name: 'Invoice',\r\n            href: paths.dashboard.users.six,\r\n          },\r\n          { name: currentInvoice?.invoiceNumber },\r\n        ]}\r\n        sx={{\r\n          mb: { xs: 3, md: 5 },\r\n        }}\r\n      />\r\n\r\n      <InvoiceNewEditForm currentInvoice={currentInvoice} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nNineView.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { useParams } from 'src/routes/hooks';\r\n// sections\r\nimport NineView from 'src/sections/nine/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageNine() {\r\n  const params = useParams();\r\n\r\n  const { id } = params;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Eight</title>\r\n      </Helmet>\r\n\r\n      <NineView id={`${id}`} />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport { useState, useCallback } from 'react';\n// @mui\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Dialog from '@mui/material/Dialog';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport ListItemButton, { listItemButtonClasses } from '@mui/material/ListItemButton';\n// components\nimport Label from 'src/components/label';\nimport Iconify from 'src/components/iconify';\nimport SearchNotFound from 'src/components/search-not-found';\n\n// ----------------------------------------------------------------------\n\nexport default function AddressListDialog({\n  title = 'Address Book',\n  list,\n  action,\n  //\n  open,\n  onClose,\n  //\n  selected,\n  onSelect,\n}) {\n  const [searchAddress, setSearchAddress] = useState('');\n\n  const dataFiltered = applyFilter({\n    inputData: list,\n    query: searchAddress,\n  });\n\n  const notFound = !dataFiltered.length && !!searchAddress;\n\n  const handleSearchAddress = useCallback((event) => {\n    setSearchAddress(event.target.value);\n  }, []);\n\n  const handleSelectAddress = useCallback(\n    (address) => {\n      onSelect(address);\n      setSearchAddress('');\n      onClose();\n    },\n    [onClose, onSelect]\n  );\n\n  const renderList = (\n    <Stack\n      spacing={0.5}\n      sx={{\n        p: 0.5,\n        maxHeight: 80 * 8,\n        overflowX: 'hidden',\n      }}\n    >\n      {dataFiltered.map((address) => (\n        <Stack\n          key={address.id}\n          spacing={0.5}\n          component={ListItemButton}\n          selected={selected(`${address.id}`)}\n          onClick={() => handleSelectAddress(address)}\n          sx={{\n            py: 1,\n            px: 1.5,\n            borderRadius: 1,\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            [`&.${listItemButtonClasses.selected}`]: {\n              bgcolor: 'action.selected',\n              '&:hover': {\n                bgcolor: 'action.selected',\n              },\n            },\n          }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n            <Typography variant=\"subtitle2\">{address.name}</Typography>\n\n            {address.primary && <Label color=\"info\">Default</Label>}\n          </Stack>\n\n          {address.company && (\n            <Box sx={{ color: 'primary.main', typography: 'caption' }}>{address.company}</Box>\n          )}\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {address.fullAddress}\n          </Typography>\n\n          {address.phoneNumber && (\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {address.phoneNumber}\n            </Typography>\n          )}\n        </Stack>\n      ))}\n    </Stack>\n  );\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={open} onClose={onClose}>\n      <Stack\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        sx={{ p: 3, pr: 1.5 }}\n      >\n        <Typography variant=\"h6\"> {title} </Typography>\n\n        {action && action}\n      </Stack>\n\n      <Stack sx={{ p: 2, pt: 0 }}>\n        <TextField\n          value={searchAddress}\n          onChange={handleSearchAddress}\n          placeholder=\"Search...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      {notFound ? (\n        <SearchNotFound query={searchAddress} sx={{ px: 3, pt: 5, pb: 10 }} />\n      ) : (\n        renderList\n      )}\n    </Dialog>\n  );\n}\n\nAddressListDialog.propTypes = {\n  action: PropTypes.node,\n  list: PropTypes.array,\n  onClose: PropTypes.func,\n  onSelect: PropTypes.func,\n  open: PropTypes.bool,\n  selected: PropTypes.func,\n  title: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nfunction applyFilter({ inputData, query }) {\n  if (query) {\n    return inputData.filter(\n      (address) =>\n        address.name.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n        address.fullAddress.toLowerCase().indexOf(query.toLowerCase()) !== -1 ||\n        `${address.company}`.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n\n  return inputData;\n}\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","InvoiceNewEditDetails","control","setValue","resetField","getValues","watch","useFormContext","files","setFiles","useState","values","totalOnRow","items","item","quantity","price","subTotal","sum","fields","append","remove","useFieldArray","handleRemoveFile","useCallback","index","concat","shouldValidate","handleDrop","acceptedFiles","file","newFile","Object","assign","preview","URL","createObjectURL","error","console","handleDropMultiFile","selectedFile","handleClearService","handleChangeQuantity","event","Number","value","handleChangePrice","handleSelectService","option","selectedService","INVOICE_SERVICE_OPTIONS","find","service","renderTotal","spacing","textAlign","fCurrency","p","mb","divider","Divider","flexItem","borderStyle","xs","md","RHFTextField","size","label","InputLabelProps","shrink","maxWidth","RHFUpload","maxSize","onDrop","onDelete","RHFSelect","MenuItem","onClick","fontStyle","id","type","placeholder","onChange","InputProps","startAdornment","InputAdornment","position","total","toFixed","inputBaseClasses","input","Button","startIcon","Iconify","handleRemove","my","handleAdd","title","coverUrl","Card","CardHeader","CardContent","Upload","multiple","onRemove","inputFile","filesFiltered","filter","fileFiltered","InvoiceNewEditAddress","_errors$invoiceTo","formState","errors","upMd","useResponsive","invoiceFrom","invoiceTo","from","useBoolean","to","orientation","IconButton","onTrue","fullAddress","phoneNumber","message","AddressListDialog","open","onClose","onFalse","selected","selectedId","onSelect","address","list","_addressBooks","alignSelf","InvoiceNewEditStatusDate","sm","invoiceNumber","fullWidth","PaperPropsSx","textTransform","Controller","render","field","fieldState","DatePicker","newValue","slotProps","textField","helperText","_ref2","InvoiceNewEditForm","currentInvoice","router","useRouter","enqueueSnackbar","useSnackbar","loadingSave","loadingSend","NewInvoiceSchema","Yup","shape","nullable","required","EmpID","UploadFile","createDate","dueDate","test","parent","getTime","status","defaultValues","useMemo","Date","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","log","handleSaveAsDraft","async","Promise","resolve","setTimeout","push","paths","dashboard","users","root","info","JSON","stringify","data","handleCreateAndSend","FormProvider","justifyContent","LoadingButton","loading","NineView","settings","useSettingsContext","_invoices","invoice","Container","themeStretch","six","PageNine","params","useParams","Helmet","searchAddress","setSearchAddress","dataFiltered","inputData","query","toLowerCase","indexOf","company","applyFilter","notFound","handleSearchAddress","handleSelectAddress","renderList","maxHeight","overflowX","ListItemButton","py","px","flexDirection","listItemButtonClasses","primary","Label","Dialog","pr","pt","TextField","SearchNotFound","pb"],"sourceRoot":""}